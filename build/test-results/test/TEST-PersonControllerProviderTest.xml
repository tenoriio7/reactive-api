<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="PersonControllerProviderTest" tests="1" skipped="0" failures="0" errors="0" timestamp="2024-06-03T18:14:58" hostname="ci-49272-8" time="6.51">
  <properties/>
  <testcase name="other_api - Retrieve create" classname="PersonControllerProviderTest" time="6.51"/>
  <system-out><![CDATA[2024-06-03 15:14:44 DEBUG a.c.d.p.p.j.PactVerificationInvocationContextProvider - Verifying pacts for provider 'reactive_api' and consumer 'null'
2024-06-03 15:14:44 DEBUG a.c.d.p.p.j.PactVerificationInvocationContextProvider - Pact sources on test class:
 @au.com.dius.pact.provider.junitsupport.loader.PactSource(au.com.dius.pact.provider.junitsupport.loader.PactFolderLoader.class)
2024-06-03 15:14:44 DEBUG a.c.dius.pact.provider.ProviderUtils - Pact source does not have a constructor with one argument of type Class

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.2)

2024-06-03 15:14:45 DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2024-06-03 15:14:45 INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-06-03 15:14:45 DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2024-06-03 15:14:45 DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2024-06-03 15:14:45 DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2024-06-03 15:14:45 DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2024-06-03 15:14:45 DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2024-06-03 15:14:45 DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2024-06-03 15:14:45 WARN  o.s.b.t.j.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/Users/vlopes/.gradle/caches/modules-2/files-2.1/org.json/json/20220924/5aa95e7688f76c664af205c5937620f02688dfbc/json-20220924.jar!/org/json/JSONObject.class
	jar:file:/Users/vlopes/.gradle/caches/modules-2/files-2.1/com.vaadin.external.google/android-json/0.0.20131108.vaadin1/fa26d351fe62a6a17f5cda1287c1c6110dec413f/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

2024-06-03 15:14:45 DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2024-06-03 15:14:45 INFO  PersonControllerProviderTest - Starting PersonControllerProviderTest using Java 17.0.11 with PID 24340 (started by vlopes in /Users/vlopes/workspace/reactive-api)
2024-06-03 15:14:45 DEBUG PersonControllerProviderTest - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-06-03 15:14:45 INFO  PersonControllerProviderTest - No active profile set, falling back to 1 default profile: "default"
2024-06-03 15:14:45 DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2024-06-03 15:14:45 DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2024-06-03 15:14:45 DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2024-06-03 15:14:45 DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2024-06-03 15:14:45 DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2024-06-03 15:14:45 DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2024-06-03 15:14:47 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-06-03 15:14:47 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2024-06-03 15:14:47 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 259 ms. Found 2 R2DBC repository interfaces.
2024-06-03 15:14:49 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-06-03 15:14:49 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-03 15:14:49 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-06-03 15:14:49 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2024-06-03 15:14:49 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-06-03 15:14:49 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3325 ms
2024-06-03 15:14:49 DEBUG reactor.util.Loggers - Using Slf4j logging framework
2024-06-03 15:14:49 DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2024-06-03 15:14:49 DEBUG i.n.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
2024-06-03 15:14:49 DEBUG i.n.util.internal.PlatformDependent0 - Java version: 17
2024-06-03 15:14:49 DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2024-06-03 15:14:49 DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.copyMemory: available
2024-06-03 15:14:49 DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
2024-06-03 15:14:49 DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
2024-06-03 15:14:49 DEBUG i.n.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2024-06-03 15:14:49 DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
2024-06-03 15:14:49 DEBUG i.n.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @7523a2a6
2024-06-03 15:14:49 DEBUG i.n.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2024-06-03 15:14:49 DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2024-06-03 15:14:49 DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: /var/folders/y9/4jq05fgs23b77hb43n74jlbm80379z/T (java.io.tmpdir)
2024-06-03 15:14:49 DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2024-06-03 15:14:49 DEBUG i.n.util.internal.PlatformDependent - Platform: MacOS
2024-06-03 15:14:49 DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
2024-06-03 15:14:49 DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2024-06-03 15:14:49 DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
2024-06-03 15:14:49 DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2024-06-03 15:14:49 DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2024-06-03 15:14:49 DEBUG i.n.u.i.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2024-06-03 15:14:49 DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
2024-06-03 15:14:49 DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
2024-06-03 15:14:50 DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2024-06-03 15:14:50 DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2024-06-03 15:14:50 DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2024-06-03 15:14:50 DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2024-06-03 15:14:50 DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2024-06-03 15:14:50 DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2024-06-03 15:14:50 DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2024-06-03 15:14:50 DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2024-06-03 15:14:50 DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2024-06-03 15:14:50 DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2024-06-03 15:14:50 DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2024-06-03 15:14:50 DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2024-06-03 15:14:50 DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2024-06-03 15:14:50 DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2024-06-03 15:14:50 DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2024-06-03 15:14:50 DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2024-06-03 15:14:50 DEBUG _.s.w.s.HandlerMapping.Mappings - 
	b.c.t.r.c.CrocodileController:
	{GET [/crocodile]}: getAll()
	{GET [/crocodile/{id}], produces [application/json]}: getByCrocodileById(String)
2024-06-03 15:14:50 DEBUG _.s.w.s.HandlerMapping.Mappings - 
	b.c.t.r.c.PersonController:
	{POST [/person]}: create(Person)
	{GET [/person]}: getAll()
	{GET [/person/crocodiles/{id}], produces [application/json]}: getByCrocodileById(String)
	{GET [/person/{id}]}: getById(String)
	{DELETE [/person/{id}]}: deleteById(String)
2024-06-03 15:14:50 DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2024-06-03 15:14:50 DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2024-06-03 15:14:51 DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2024-06-03 15:14:51 DEBUG i.m.c.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2024-06-03 15:14:51 DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=8, workerCount=8}
2024-06-03 15:14:51 DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@652855c4
2024-06-03 15:14:51 DEBUG reactor.pool.SimpleDequePool - should warm up 9 extra resources
2024-06-03 15:14:52 DEBUG io.r2dbc.h2.client.SessionClient - Request:  CALL H2VERSION()
2024-06-03 15:14:52 DEBUG io.r2dbc.h2.client.SessionClient - Response: org.h2.result.LocalResult@40dc4361 columns: 1 rows: 1 pos: -1
2024-06-03 15:14:52 DEBUG io.r2dbc.pool.ConnectionPool - Obtaining new connection from the pool
2024-06-03 15:14:52 DEBUG io.r2dbc.h2.client.SessionClient - Request:  SELECT CURRENT_TIMESTAMP
2024-06-03 15:14:52 DEBUG io.r2dbc.h2.client.SessionClient - Response: org.h2.result.LocalResult@4d5aba83 columns: 1 rows: 1 pos: -1
2024-06-03 15:14:52 DEBUG io.r2dbc.h2.client.SessionClient - Request:  CALL H2VERSION()
2024-06-03 15:14:52 DEBUG io.r2dbc.h2.client.SessionClient - Response: org.h2.result.LocalResult@f5b82bd columns: 1 rows: 1 pos: -1
2024-06-03 15:14:52 DEBUG reactor.pool.SimpleDequePool - warmed up extra resource 1/9
2024-06-03 15:14:52 DEBUG io.r2dbc.h2.client.SessionClient - Request:  CALL H2VERSION()
2024-06-03 15:14:52 DEBUG io.r2dbc.h2.client.SessionClient - Response: org.h2.result.LocalResult@2a96c275 columns: 1 rows: 1 pos: -1
2024-06-03 15:14:52 DEBUG reactor.pool.SimpleDequePool - warmed up extra resource 2/9
2024-06-03 15:14:52 DEBUG io.r2dbc.h2.client.SessionClient - Request:  CALL H2VERSION()
2024-06-03 15:14:52 DEBUG io.r2dbc.h2.client.SessionClient - Response: org.h2.result.LocalResult@224545 columns: 1 rows: 1 pos: -1
2024-06-03 15:14:52 DEBUG reactor.pool.SimpleDequePool - warmed up extra resource 3/9
2024-06-03 15:14:52 DEBUG io.r2dbc.h2.client.SessionClient - Request:  CALL H2VERSION()
2024-06-03 15:14:52 DEBUG io.r2dbc.h2.client.SessionClient - Response: org.h2.result.LocalResult@656569b2 columns: 1 rows: 1 pos: -1
2024-06-03 15:14:52 DEBUG reactor.pool.SimpleDequePool - warmed up extra resource 4/9
2024-06-03 15:14:52 DEBUG io.r2dbc.h2.client.SessionClient - Request:  CALL H2VERSION()
2024-06-03 15:14:52 DEBUG io.r2dbc.h2.client.SessionClient - Response: org.h2.result.LocalResult@36f851c9 columns: 1 rows: 1 pos: -1
2024-06-03 15:14:52 DEBUG reactor.pool.SimpleDequePool - warmed up extra resource 5/9
2024-06-03 15:14:52 DEBUG io.r2dbc.h2.client.SessionClient - Request:  CALL H2VERSION()
2024-06-03 15:14:52 DEBUG io.r2dbc.h2.client.SessionClient - Response: org.h2.result.LocalResult@2a61b809 columns: 1 rows: 1 pos: -1
2024-06-03 15:14:52 DEBUG reactor.pool.SimpleDequePool - warmed up extra resource 6/9
2024-06-03 15:14:52 DEBUG io.r2dbc.h2.client.SessionClient - Request:  CALL H2VERSION()
2024-06-03 15:14:52 DEBUG io.r2dbc.h2.client.SessionClient - Response: org.h2.result.LocalResult@29f7f2a columns: 1 rows: 1 pos: -1
2024-06-03 15:14:52 DEBUG reactor.pool.SimpleDequePool - warmed up extra resource 7/9
2024-06-03 15:14:52 DEBUG io.r2dbc.h2.client.SessionClient - Request:  CALL H2VERSION()
2024-06-03 15:14:52 DEBUG io.r2dbc.h2.client.SessionClient - Response: org.h2.result.LocalResult@25193e80 columns: 1 rows: 1 pos: -1
2024-06-03 15:14:52 DEBUG reactor.pool.SimpleDequePool - warmed up extra resource 8/9
2024-06-03 15:14:52 DEBUG io.r2dbc.h2.client.SessionClient - Request:  CALL H2VERSION()
2024-06-03 15:14:52 DEBUG io.r2dbc.h2.client.SessionClient - Response: org.h2.result.LocalResult@4347a2fe columns: 1 rows: 1 pos: -1
2024-06-03 15:14:52 DEBUG reactor.pool.SimpleDequePool - warmed up extra resource 9/9
2024-06-03 15:14:52 DEBUG io.r2dbc.h2.client.SessionClient - Request:  CREATE TABLE IF NOT EXISTS person ( id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, age INT NOT NULL )
2024-06-03 15:14:52 DEBUG io.r2dbc.pool.PooledConnection - Releasing connection
2024-06-03 15:14:52 DEBUG io.r2dbc.h2.client.SessionClient - Request:  SELECT CURRENT_TIMESTAMP
2024-06-03 15:14:52 DEBUG io.r2dbc.h2.client.SessionClient - Response: org.h2.result.LocalResult@3289314e columns: 1 rows: 1 pos: -1
2024-06-03 15:14:52 INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 13 endpoint(s) beneath base path '/actuator'
2024-06-03 15:14:52 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-06-03 15:14:52 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2024-06-03 15:14:52 INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-reactive-api-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = reactive-api
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-06-03 15:14:57 INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-06-03 15:14:57 INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-06-03 15:14:57 INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1717438497979
2024-06-03 15:14:58 INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Subscribed to topic(s): person-async
2024-06-03 15:14:58 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FindCoordinator request to broker localhost:9092 (id: -1 rack: null)
2024-06-03 15:14:58 INFO  PersonControllerProviderTest - Started PersonControllerProviderTest in 12.866 seconds (process running for 15.788)
2024-06-03 15:14:58 DEBUG o.apache.kafka.clients.ClientUtils - Resolved host localhost as 127.0.0.1
2024-06-03 15:14:58 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Initiating connection to node localhost:9092 (id: -1 rack: null) using address localhost/127.0.0.1
2024-06-03 15:14:58 DEBUG o.a.kafka.common.network.Selector - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Created socket with SO_RCVBUF = 342972, SO_SNDBUF = 146988, SO_TIMEOUT = 0 to node -1
2024-06-03 15:14:58 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Completed connection to node -1. Fetching API versions.
2024-06-03 15:14:58 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Initiating API versions fetch from node -1.
2024-06-03 15:14:58 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending API_VERSIONS request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=1, headerVersion=2) and timeout 30000 to node -1: ApiVersionsRequestData(clientSoftwareName='apache-kafka-java', clientSoftwareVersion='3.6.1')
2024-06-03 15:14:58 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received API_VERSIONS response from node -1 for request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=1, headerVersion=2): ApiVersionsResponseData(errorCode=0, apiKeys=[ApiVersion(apiKey=0, minVersion=0, maxVersion=8), ApiVersion(apiKey=1, minVersion=0, maxVersion=12), ApiVersion(apiKey=2, minVersion=0, maxVersion=5), ApiVersion(apiKey=3, minVersion=0, maxVersion=9), ApiVersion(apiKey=4, minVersion=0, maxVersion=4), ApiVersion(apiKey=5, minVersion=0, maxVersion=3), ApiVersion(apiKey=6, minVersion=0, maxVersion=6), ApiVersion(apiKey=7, minVersion=0, maxVersion=3), ApiVersion(apiKey=8, minVersion=0, maxVersion=8), ApiVersion(apiKey=9, minVersion=0, maxVersion=7), ApiVersion(apiKey=10, minVersion=0, maxVersion=3), ApiVersion(apiKey=11, minVersion=0, maxVersion=7), ApiVersion(apiKey=12, minVersion=0, maxVersion=4), ApiVersion(apiKey=13, minVersion=0, maxVersion=4), ApiVersion(apiKey=14, minVersion=0, maxVersion=5), ApiVersion(apiKey=15, minVersion=0, maxVersion=5), ApiVersion(apiKey=16, minVersion=0, maxVersion=4), ApiVersion(apiKey=17, minVersion=0, maxVersion=1), ApiVersion(apiKey=18, minVersion=0, maxVersion=3), ApiVersion(apiKey=19, minVersion=0, maxVersion=6), ApiVersion(apiKey=20, minVersion=0, maxVersion=5), ApiVersion(apiKey=21, minVersion=0, maxVersion=2), ApiVersion(apiKey=22, minVersion=0, maxVersion=4), ApiVersion(apiKey=23, minVersion=0, maxVersion=3), ApiVersion(apiKey=24, minVersion=0, maxVersion=2), ApiVersion(apiKey=25, minVersion=0, maxVersion=2), ApiVersion(apiKey=26, minVersion=0, maxVersion=2), ApiVersion(apiKey=27, minVersion=0, maxVersion=0), ApiVersion(apiKey=28, minVersion=0, maxVersion=3), ApiVersion(apiKey=29, minVersion=0, maxVersion=2), ApiVersion(apiKey=30, minVersion=0, maxVersion=2), ApiVersion(apiKey=31, minVersion=0, maxVersion=2), ApiVersion(apiKey=32, minVersion=0, maxVersion=3), ApiVersion(apiKey=33, minVersion=0, maxVersion=1), ApiVersion(apiKey=34, minVersion=0, maxVersion=1), ApiVersion(apiKey=35, minVersion=0, maxVersion=2), ApiVersion(apiKey=36, minVersion=0, maxVersion=2), ApiVersion(apiKey=37, minVersion=0, maxVersion=3), ApiVersion(apiKey=38, minVersion=0, maxVersion=2), ApiVersion(apiKey=39, minVersion=0, maxVersion=2), ApiVersion(apiKey=40, minVersion=0, maxVersion=2), ApiVersion(apiKey=41, minVersion=0, maxVersion=2), ApiVersion(apiKey=42, minVersion=0, maxVersion=2), ApiVersion(apiKey=43, minVersion=0, maxVersion=2), ApiVersion(apiKey=44, minVersion=0, maxVersion=1), ApiVersion(apiKey=45, minVersion=0, maxVersion=0), ApiVersion(apiKey=46, minVersion=0, maxVersion=0), ApiVersion(apiKey=47, minVersion=0, maxVersion=0), ApiVersion(apiKey=48, minVersion=0, maxVersion=0), ApiVersion(apiKey=49, minVersion=0, maxVersion=0), ApiVersion(apiKey=50, minVersion=0, maxVersion=0), ApiVersion(apiKey=51, minVersion=0, maxVersion=0), ApiVersion(apiKey=56, minVersion=0, maxVersion=0), ApiVersion(apiKey=57, minVersion=0, maxVersion=0)], throttleTimeMs=0, supportedFeatures=[], finalizedFeaturesEpoch=0, finalizedFeatures=[], zkMigrationReady=false)
2024-06-03 15:14:58 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Node -1 has finalized features epoch: 0, finalized features: [], supported features: [], ZK migration ready: false, API versions: (Produce(0): 0 to 8 [usable: 8], Fetch(1): 0 to 12 [usable: 12], ListOffsets(2): 0 to 5 [usable: 5], Metadata(3): 0 to 9 [usable: 9], LeaderAndIsr(4): 0 to 4 [usable: 4], StopReplica(5): 0 to 3 [usable: 3], UpdateMetadata(6): 0 to 6 [usable: 6], ControlledShutdown(7): 0 to 3 [usable: 3], OffsetCommit(8): 0 to 8 [usable: 8], OffsetFetch(9): 0 to 7 [usable: 7], FindCoordinator(10): 0 to 3 [usable: 3], JoinGroup(11): 0 to 7 [usable: 7], Heartbeat(12): 0 to 4 [usable: 4], LeaveGroup(13): 0 to 4 [usable: 4], SyncGroup(14): 0 to 5 [usable: 5], DescribeGroups(15): 0 to 5 [usable: 5], ListGroups(16): 0 to 4 [usable: 4], SaslHandshake(17): 0 to 1 [usable: 1], ApiVersions(18): 0 to 3 [usable: 3], CreateTopics(19): 0 to 6 [usable: 6], DeleteTopics(20): 0 to 5 [usable: 5], DeleteRecords(21): 0 to 2 [usable: 2], InitProducerId(22): 0 to 4 [usable: 4], OffsetForLeaderEpoch(23): 0 to 3 [usable: 3], AddPartitionsToTxn(24): 0 to 2 [usable: 2], AddOffsetsToTxn(25): 0 to 2 [usable: 2], EndTxn(26): 0 to 2 [usable: 2], WriteTxnMarkers(27): 0 [usable: 0], TxnOffsetCommit(28): 0 to 3 [usable: 3], DescribeAcls(29): 0 to 2 [usable: 2], CreateAcls(30): 0 to 2 [usable: 2], DeleteAcls(31): 0 to 2 [usable: 2], DescribeConfigs(32): 0 to 3 [usable: 3], AlterConfigs(33): 0 to 1 [usable: 1], AlterReplicaLogDirs(34): 0 to 1 [usable: 1], DescribeLogDirs(35): 0 to 2 [usable: 2], SaslAuthenticate(36): 0 to 2 [usable: 2], CreatePartitions(37): 0 to 3 [usable: 3], CreateDelegationToken(38): 0 to 2 [usable: 2], RenewDelegationToken(39): 0 to 2 [usable: 2], ExpireDelegationToken(40): 0 to 2 [usable: 2], DescribeDelegationToken(41): 0 to 2 [usable: 2], DeleteGroups(42): 0 to 2 [usable: 2], ElectLeaders(43): 0 to 2 [usable: 2], IncrementalAlterConfigs(44): 0 to 1 [usable: 1], AlterPartitionReassignments(45): 0 [usable: 0], ListPartitionReassignments(46): 0 [usable: 0], OffsetDelete(47): 0 [usable: 0], DescribeClientQuotas(48): 0 [usable: 0], AlterClientQuotas(49): 0 [usable: 0], DescribeUserScramCredentials(50): 0 [usable: 0], AlterUserScramCredentials(51): 0 [usable: 0], DescribeQuorum(55): UNSUPPORTED, AlterPartition(56): 0 [usable: 0], UpdateFeatures(57): 0 [usable: 0], Envelope(58): UNSUPPORTED, DescribeCluster(60): UNSUPPORTED, DescribeProducers(61): UNSUPPORTED, UnregisterBroker(64): UNSUPPORTED, DescribeTransactions(65): UNSUPPORTED, ListTransactions(66): UNSUPPORTED, AllocateProducerIds(67): UNSUPPORTED, ConsumerGroupHeartbeat(68): UNSUPPORTED).
2024-06-03 15:14:58 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: -1 rack: null)
2024-06-03 15:14:58 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=2, headerVersion=2) and timeout 30000 to node -1: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:14:58 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FIND_COORDINATOR request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=0, headerVersion=2) and timeout 30000 to node -1: FindCoordinatorRequestData(key='reactive-api', keyType=0, coordinatorKeys=[])
2024-06-03 15:14:59 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received METADATA response from node -1 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=2, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=5, name='person-async', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:14:59 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Error while fetching metadata with correlation id 2 : {person-async=LEADER_NOT_AVAILABLE}
2024-06-03 15:14:59 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Requesting metadata update for topic person-async due to error LEADER_NOT_AVAILABLE
2024-06-03 15:14:59 INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Cluster ID: Fum51fZvSd-Zb755_Ztrdw
2024-06-03 15:14:59 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updated cluster metadata updateVersion 2 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:14:59 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Initialize connection to node localhost:9092 (id: 1001 rack: null) for sending metadata request
2024-06-03 15:14:59 DEBUG o.apache.kafka.clients.ClientUtils - Resolved host localhost as 127.0.0.1
2024-06-03 15:14:59 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Initiating connection to node localhost:9092 (id: 1001 rack: null) using address localhost/127.0.0.1
2024-06-03 15:14:59 DEBUG o.a.kafka.common.network.Selector - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Created socket with SO_RCVBUF = 342972, SO_SNDBUF = 146988, SO_TIMEOUT = 0 to node 1001
2024-06-03 15:14:59 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Completed connection to node 1001. Fetching API versions.
2024-06-03 15:14:59 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Initiating API versions fetch from node 1001.
2024-06-03 15:14:59 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending API_VERSIONS request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=3, headerVersion=2) and timeout 30000 to node 1001: ApiVersionsRequestData(clientSoftwareName='apache-kafka-java', clientSoftwareVersion='3.6.1')
2024-06-03 15:14:59 DEBUG a.c.d.p.p.j.PactVerificationStateChangeExtension - beforeEach for interaction 'Retrieve create'
2024-06-03 15:14:59 INFO  a.c.d.p.p.j.PactVerificationStateChangeExtension - Invoking state change method 'need create a person':SETUP
2024-06-03 15:14:59 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received API_VERSIONS response from node 1001 for request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=3, headerVersion=2): ApiVersionsResponseData(errorCode=0, apiKeys=[ApiVersion(apiKey=0, minVersion=0, maxVersion=8), ApiVersion(apiKey=1, minVersion=0, maxVersion=12), ApiVersion(apiKey=2, minVersion=0, maxVersion=5), ApiVersion(apiKey=3, minVersion=0, maxVersion=9), ApiVersion(apiKey=4, minVersion=0, maxVersion=4), ApiVersion(apiKey=5, minVersion=0, maxVersion=3), ApiVersion(apiKey=6, minVersion=0, maxVersion=6), ApiVersion(apiKey=7, minVersion=0, maxVersion=3), ApiVersion(apiKey=8, minVersion=0, maxVersion=8), ApiVersion(apiKey=9, minVersion=0, maxVersion=7), ApiVersion(apiKey=10, minVersion=0, maxVersion=3), ApiVersion(apiKey=11, minVersion=0, maxVersion=7), ApiVersion(apiKey=12, minVersion=0, maxVersion=4), ApiVersion(apiKey=13, minVersion=0, maxVersion=4), ApiVersion(apiKey=14, minVersion=0, maxVersion=5), ApiVersion(apiKey=15, minVersion=0, maxVersion=5), ApiVersion(apiKey=16, minVersion=0, maxVersion=4), ApiVersion(apiKey=17, minVersion=0, maxVersion=1), ApiVersion(apiKey=18, minVersion=0, maxVersion=3), ApiVersion(apiKey=19, minVersion=0, maxVersion=6), ApiVersion(apiKey=20, minVersion=0, maxVersion=5), ApiVersion(apiKey=21, minVersion=0, maxVersion=2), ApiVersion(apiKey=22, minVersion=0, maxVersion=4), ApiVersion(apiKey=23, minVersion=0, maxVersion=3), ApiVersion(apiKey=24, minVersion=0, maxVersion=2), ApiVersion(apiKey=25, minVersion=0, maxVersion=2), ApiVersion(apiKey=26, minVersion=0, maxVersion=2), ApiVersion(apiKey=27, minVersion=0, maxVersion=0), ApiVersion(apiKey=28, minVersion=0, maxVersion=3), ApiVersion(apiKey=29, minVersion=0, maxVersion=2), ApiVersion(apiKey=30, minVersion=0, maxVersion=2), ApiVersion(apiKey=31, minVersion=0, maxVersion=2), ApiVersion(apiKey=32, minVersion=0, maxVersion=3), ApiVersion(apiKey=33, minVersion=0, maxVersion=1), ApiVersion(apiKey=34, minVersion=0, maxVersion=1), ApiVersion(apiKey=35, minVersion=0, maxVersion=2), ApiVersion(apiKey=36, minVersion=0, maxVersion=2), ApiVersion(apiKey=37, minVersion=0, maxVersion=3), ApiVersion(apiKey=38, minVersion=0, maxVersion=2), ApiVersion(apiKey=39, minVersion=0, maxVersion=2), ApiVersion(apiKey=40, minVersion=0, maxVersion=2), ApiVersion(apiKey=41, minVersion=0, maxVersion=2), ApiVersion(apiKey=42, minVersion=0, maxVersion=2), ApiVersion(apiKey=43, minVersion=0, maxVersion=2), ApiVersion(apiKey=44, minVersion=0, maxVersion=1), ApiVersion(apiKey=45, minVersion=0, maxVersion=0), ApiVersion(apiKey=46, minVersion=0, maxVersion=0), ApiVersion(apiKey=47, minVersion=0, maxVersion=0), ApiVersion(apiKey=48, minVersion=0, maxVersion=0), ApiVersion(apiKey=49, minVersion=0, maxVersion=0), ApiVersion(apiKey=50, minVersion=0, maxVersion=0), ApiVersion(apiKey=51, minVersion=0, maxVersion=0), ApiVersion(apiKey=56, minVersion=0, maxVersion=0), ApiVersion(apiKey=57, minVersion=0, maxVersion=0)], throttleTimeMs=0, supportedFeatures=[], finalizedFeaturesEpoch=0, finalizedFeatures=[], zkMigrationReady=false)
2024-06-03 15:14:59 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Node 1001 has finalized features epoch: 0, finalized features: [], supported features: [], ZK migration ready: false, API versions: (Produce(0): 0 to 8 [usable: 8], Fetch(1): 0 to 12 [usable: 12], ListOffsets(2): 0 to 5 [usable: 5], Metadata(3): 0 to 9 [usable: 9], LeaderAndIsr(4): 0 to 4 [usable: 4], StopReplica(5): 0 to 3 [usable: 3], UpdateMetadata(6): 0 to 6 [usable: 6], ControlledShutdown(7): 0 to 3 [usable: 3], OffsetCommit(8): 0 to 8 [usable: 8], OffsetFetch(9): 0 to 7 [usable: 7], FindCoordinator(10): 0 to 3 [usable: 3], JoinGroup(11): 0 to 7 [usable: 7], Heartbeat(12): 0 to 4 [usable: 4], LeaveGroup(13): 0 to 4 [usable: 4], SyncGroup(14): 0 to 5 [usable: 5], DescribeGroups(15): 0 to 5 [usable: 5], ListGroups(16): 0 to 4 [usable: 4], SaslHandshake(17): 0 to 1 [usable: 1], ApiVersions(18): 0 to 3 [usable: 3], CreateTopics(19): 0 to 6 [usable: 6], DeleteTopics(20): 0 to 5 [usable: 5], DeleteRecords(21): 0 to 2 [usable: 2], InitProducerId(22): 0 to 4 [usable: 4], OffsetForLeaderEpoch(23): 0 to 3 [usable: 3], AddPartitionsToTxn(24): 0 to 2 [usable: 2], AddOffsetsToTxn(25): 0 to 2 [usable: 2], EndTxn(26): 0 to 2 [usable: 2], WriteTxnMarkers(27): 0 [usable: 0], TxnOffsetCommit(28): 0 to 3 [usable: 3], DescribeAcls(29): 0 to 2 [usable: 2], CreateAcls(30): 0 to 2 [usable: 2], DeleteAcls(31): 0 to 2 [usable: 2], DescribeConfigs(32): 0 to 3 [usable: 3], AlterConfigs(33): 0 to 1 [usable: 1], AlterReplicaLogDirs(34): 0 to 1 [usable: 1], DescribeLogDirs(35): 0 to 2 [usable: 2], SaslAuthenticate(36): 0 to 2 [usable: 2], CreatePartitions(37): 0 to 3 [usable: 3], CreateDelegationToken(38): 0 to 2 [usable: 2], RenewDelegationToken(39): 0 to 2 [usable: 2], ExpireDelegationToken(40): 0 to 2 [usable: 2], DescribeDelegationToken(41): 0 to 2 [usable: 2], DeleteGroups(42): 0 to 2 [usable: 2], ElectLeaders(43): 0 to 2 [usable: 2], IncrementalAlterConfigs(44): 0 to 1 [usable: 1], AlterPartitionReassignments(45): 0 [usable: 0], ListPartitionReassignments(46): 0 [usable: 0], OffsetDelete(47): 0 [usable: 0], DescribeClientQuotas(48): 0 [usable: 0], AlterClientQuotas(49): 0 [usable: 0], DescribeUserScramCredentials(50): 0 [usable: 0], AlterUserScramCredentials(51): 0 [usable: 0], DescribeQuorum(55): UNSUPPORTED, AlterPartition(56): 0 [usable: 0], UpdateFeatures(57): 0 [usable: 0], Envelope(58): UNSUPPORTED, DescribeCluster(60): UNSUPPORTED, DescribeProducers(61): UNSUPPORTED, UnregisterBroker(64): UNSUPPORTED, DescribeTransactions(65): UNSUPPORTED, ListTransactions(66): UNSUPPORTED, AllocateProducerIds(67): UNSUPPORTED, ConsumerGroupHeartbeat(68): UNSUPPORTED).
2024-06-03 15:14:59 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:14:59 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=4, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)

Verifying a pact between other_api and reactive_api
  [Using File target/pacts/other_api-reactive_api.json]
2024-06-03 15:14:59 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FIND_COORDINATOR response from node -1 for request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=0, headerVersion=2): FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[])
  Given need create a person
2024-06-03 15:14:59 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FindCoordinator response ClientResponse(receivedTimeMs=1717438499392, latencyMs=1022, disconnected=false, timedOut=false, requestHeader=RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=0, headerVersion=2), responseBody=FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[]))
2024-06-03 15:14:59 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Group coordinator lookup failed: The coordinator is not available.
2024-06-03 15:14:59 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Coordinator discovery failed, refreshing metadata
org.apache.kafka.common.errors.CoordinatorNotAvailableException: The coordinator is not available.
  Retrieve create
2024-06-03 15:14:59 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=4, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=5, name='person-async', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:14:59 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Error while fetching metadata with correlation id 4 : {person-async=LEADER_NOT_AVAILABLE}
2024-06-03 15:14:59 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Requesting metadata update for topic person-async due to error LEADER_NOT_AVAILABLE
2024-06-03 15:14:59 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updated cluster metadata updateVersion 3 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:14:59 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FindCoordinator request to broker localhost:9092 (id: 1001 rack: null)
2024-06-03 15:14:59 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FIND_COORDINATOR request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=5, headerVersion=2) and timeout 30000 to node 1001: FindCoordinatorRequestData(key='reactive-api', keyType=0, coordinatorKeys=[])
2024-06-03 15:14:59 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FIND_COORDINATOR response from node 1001 for request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=5, headerVersion=2): FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[])
2024-06-03 15:14:59 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FindCoordinator response ClientResponse(receivedTimeMs=1717438499503, latencyMs=66, disconnected=false, timedOut=false, requestHeader=RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=5, headerVersion=2), responseBody=FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[]))
2024-06-03 15:14:59 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Group coordinator lookup failed: The coordinator is not available.
2024-06-03 15:14:59 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Coordinator discovery failed, refreshing metadata
org.apache.kafka.common.errors.CoordinatorNotAvailableException: The coordinator is not available.
2024-06-03 15:14:59 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:14:59 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=6, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:14:59 DEBUG a.c.d.pact.provider.ProviderClient - Making request for provider au.com.dius.pact.provider.ProviderInfo@51be4bf5[consumers=[],createClient=<null>,host=localhost,insecure=false,isDependencyForPactVerify=true,name=provider,packagesToScan=[],path=/,port=8080,protocol=http,requestFilter=<null>,startProviderTask=<null>,stateChangeRequestFilter=<null>,stateChangeTeardown=false,stateChangeUrl=<null>,stateChangeUsesBody=true,terminateProviderTask=<null>,trustStore=<null>,trustStorePassword=changeit,verificationType=REQUEST_RESPONSE]:
2024-06-03 15:14:59 DEBUG a.c.d.pact.provider.ProviderClient - 	method: POST
	path: /person
	query: {}
	headers: {}
	matchers: MatchingRules(rules={path=MatchingRuleCategory(name=path, matchingRules={}), header=MatchingRuleCategory(name=header, matchingRules={}), query=MatchingRuleCategory(name=query, matchingRules={}), body=MatchingRuleCategory(name=body, matchingRules={})})
	generators: Generators(categories={})
	body: PRESENT({"age":32,"name":"vini"})
2024-06-03 15:14:59 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=6, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=5, name='person-async', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:14:59 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Error while fetching metadata with correlation id 6 : {person-async=LEADER_NOT_AVAILABLE}
2024-06-03 15:14:59 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Requesting metadata update for topic person-async due to error LEADER_NOT_AVAILABLE
2024-06-03 15:14:59 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updated cluster metadata updateVersion 4 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:14:59 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FindCoordinator request to broker localhost:9092 (id: 1001 rack: null)
2024-06-03 15:14:59 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FIND_COORDINATOR request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=7, headerVersion=2) and timeout 30000 to node 1001: FindCoordinatorRequestData(key='reactive-api', keyType=0, coordinatorKeys=[])
2024-06-03 15:14:59 WARN  a.com.dius.pact.core.support.Metrics - 
            Please note: we are tracking events anonymously to gather important usage statistics like JVM version
            and operating system. To disable tracking, set the 'pact_do_not_track' system property or environment
            variable to 'true'.
            
2024-06-03 15:14:59 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FIND_COORDINATOR response from node 1001 for request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=7, headerVersion=2): FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[])
2024-06-03 15:14:59 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FindCoordinator response ClientResponse(receivedTimeMs=1717438499604, latencyMs=48, disconnected=false, timedOut=false, requestHeader=RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=7, headerVersion=2), responseBody=FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[]))
2024-06-03 15:14:59 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Group coordinator lookup failed: The coordinator is not available.
2024-06-03 15:14:59 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Coordinator discovery failed, refreshing metadata
org.apache.kafka.common.errors.CoordinatorNotAvailableException: The coordinator is not available.
2024-06-03 15:14:59 DEBUG o.a.h.c.h.i.c.InternalHttpClient - ex-0000000001 preparing request execution
2024-06-03 15:14:59 DEBUG o.a.h.c.h.impl.classic.ProtocolExec - ex-0000000001 target auth state: UNCHALLENGED
2024-06-03 15:14:59 DEBUG o.a.h.c.h.impl.classic.ProtocolExec - ex-0000000001 proxy auth state: UNCHALLENGED
2024-06-03 15:14:59 DEBUG o.a.h.c.h.impl.classic.ConnectExec - ex-0000000001 acquiring connection with route {}->http://localhost:8080
2024-06-03 15:14:59 DEBUG o.a.h.c.h.i.c.InternalHttpClient - ex-0000000001 acquiring endpoint (3 MINUTES)
2024-06-03 15:14:59 DEBUG o.a.h.c.h.i.i.PoolingHttpClientConnectionManager - ex-0000000001 endpoint lease request (3 MINUTES) [route: {}->http://localhost:8080][total available: 0; route allocated: 0 of 5; total allocated: 0 of 25]
2024-06-03 15:14:59 DEBUG o.a.h.c.h.i.i.PoolingHttpClientConnectionManager - ex-0000000001 endpoint leased [route: {}->http://localhost:8080][total available: 0; route allocated: 1 of 5; total allocated: 1 of 25]
2024-06-03 15:14:59 DEBUG o.a.h.c.h.i.c.InternalHttpClient - ex-0000000002 preparing request execution
2024-06-03 15:14:59 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:14:59 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=8, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:14:59 DEBUG o.a.h.c.h.impl.classic.ProtocolExec - ex-0000000002 target auth state: UNCHALLENGED
2024-06-03 15:14:59 DEBUG o.a.h.c.h.impl.classic.ProtocolExec - ex-0000000002 proxy auth state: UNCHALLENGED
2024-06-03 15:14:59 DEBUG o.a.h.c.h.impl.classic.ConnectExec - ex-0000000002 acquiring connection with route {s}->https://www.google-analytics.com:443
2024-06-03 15:14:59 DEBUG o.a.h.c.h.i.c.InternalHttpClient - ex-0000000002 acquiring endpoint (3 MINUTES)
2024-06-03 15:14:59 DEBUG o.a.h.c.h.i.i.PoolingHttpClientConnectionManager - ex-0000000002 endpoint lease request (3 MINUTES) [route: {s}->https://www.google-analytics.com:443][total available: 0; route allocated: 0 of 100; total allocated: 0 of 200]
2024-06-03 15:14:59 DEBUG o.a.h.c.h.i.i.PoolingHttpClientConnectionManager - ex-0000000002 endpoint leased [route: {s}->https://www.google-analytics.com:443][total available: 0; route allocated: 1 of 100; total allocated: 1 of 200]
2024-06-03 15:14:59 DEBUG o.a.h.c.h.i.i.PoolingHttpClientConnectionManager - ex-0000000002 acquired ep-0000000001
2024-06-03 15:14:59 DEBUG o.a.h.c.h.i.c.InternalHttpClient - ex-0000000002 acquired endpoint ep-0000000001
2024-06-03 15:14:59 DEBUG o.a.h.c.h.impl.classic.ConnectExec - ex-0000000002 opening connection {s}->https://www.google-analytics.com:443
2024-06-03 15:14:59 DEBUG o.a.h.c.h.i.i.PoolingHttpClientConnectionManager - ex-0000000001 acquired ep-0000000002
2024-06-03 15:14:59 DEBUG o.a.h.c.h.i.c.InternalHttpClient - ep-0000000001 connecting endpoint (null)
2024-06-03 15:14:59 DEBUG o.a.h.c.h.i.c.InternalHttpClient - ex-0000000001 acquired endpoint ep-0000000002
2024-06-03 15:14:59 DEBUG o.a.h.c.h.impl.classic.ConnectExec - ex-0000000001 opening connection {}->http://localhost:8080
2024-06-03 15:14:59 DEBUG o.a.h.c.h.i.c.InternalHttpClient - ep-0000000002 connecting endpoint (null)
2024-06-03 15:14:59 DEBUG o.a.h.c.h.i.i.PoolingHttpClientConnectionManager - ep-0000000001 connecting endpoint to https://www.google-analytics.com:443 (3 MINUTES)
2024-06-03 15:14:59 DEBUG o.a.h.c.h.i.i.DefaultHttpClientConnectionOperator - www.google-analytics.com resolving remote address
2024-06-03 15:14:59 DEBUG o.a.h.c.h.i.i.PoolingHttpClientConnectionManager - ep-0000000002 connecting endpoint to http://localhost:8080 (3 MINUTES)
2024-06-03 15:14:59 DEBUG o.a.h.c.h.i.i.DefaultHttpClientConnectionOperator - localhost resolving remote address
2024-06-03 15:14:59 DEBUG o.a.h.c.h.i.i.DefaultHttpClientConnectionOperator - localhost resolved to [localhost/127.0.0.1]
2024-06-03 15:14:59 DEBUG o.a.h.c.h.i.i.DefaultHttpClientConnectionOperator - localhost:8080 connecting null->localhost/127.0.0.1:8080 (3 MINUTES)
2024-06-03 15:14:59 DEBUG o.a.h.c.h.i.i.DefaultHttpClientConnectionOperator - www.google-analytics.com resolved to [www.google-analytics.com/216.239.32.178, www.google-analytics.com/216.239.38.178, www.google-analytics.com/216.239.36.178, www.google-analytics.com/216.239.34.178, www.google-analytics.com/2001:4860:4802:34:0:0:0:178, www.google-analytics.com/2001:4860:4802:38:0:0:0:178, www.google-analytics.com/2001:4860:4802:36:0:0:0:178, www.google-analytics.com/2001:4860:4802:32:0:0:0:178]
2024-06-03 15:14:59 DEBUG o.a.h.c.h.i.i.DefaultHttpClientConnectionOperator - www.google-analytics.com:443 connecting null->www.google-analytics.com/216.239.32.178:443 (3 MINUTES)
2024-06-03 15:14:59 DEBUG o.a.h.c.h.s.SSLConnectionSocketFactory - Connecting socket to www.google-analytics.com/216.239.32.178:443 with timeout 3 MINUTES
2024-06-03 15:14:59 DEBUG o.a.h.c.h.i.i.DefaultManagedHttpClientConnection - http-outgoing-0 set socket timeout to 3 MINUTES
2024-06-03 15:14:59 DEBUG o.a.h.c.h.i.i.DefaultHttpClientConnectionOperator - localhost:8080 connected null->localhost/127.0.0.1:8080 as http-outgoing-0
2024-06-03 15:14:59 DEBUG o.a.h.c.h.i.i.PoolingHttpClientConnectionManager - ep-0000000002 connected http-outgoing-0
2024-06-03 15:14:59 DEBUG o.a.h.c.h.i.c.InternalHttpClient - ep-0000000002 endpoint connected
2024-06-03 15:14:59 DEBUG o.a.h.c.h.i.classic.MainClientExec - ex-0000000001 executing POST /person HTTP/1.1
2024-06-03 15:14:59 DEBUG o.a.h.c.h.protocol.RequestAddCookies - ex-0000000001 Cookie spec selected: strict
2024-06-03 15:14:59 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=8, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=5, name='person-async', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:14:59 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Error while fetching metadata with correlation id 8 : {person-async=LEADER_NOT_AVAILABLE}
2024-06-03 15:14:59 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Requesting metadata update for topic person-async due to error LEADER_NOT_AVAILABLE
2024-06-03 15:14:59 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updated cluster metadata updateVersion 5 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:14:59 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FindCoordinator request to broker localhost:9092 (id: 1001 rack: null)
2024-06-03 15:14:59 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FIND_COORDINATOR request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=9, headerVersion=2) and timeout 30000 to node 1001: FindCoordinatorRequestData(key='reactive-api', keyType=0, coordinatorKeys=[])
2024-06-03 15:14:59 DEBUG o.a.h.c.h.i.c.InternalHttpClient - ep-0000000002 start execution ex-0000000001
2024-06-03 15:14:59 DEBUG o.a.h.c.h.i.i.PoolingHttpClientConnectionManager - ep-0000000002 executing exchange ex-0000000001 over http-outgoing-0
2024-06-03 15:14:59 DEBUG org.apache.hc.client5.http.headers - http-outgoing-0 >> POST /person HTTP/1.1
2024-06-03 15:14:59 DEBUG org.apache.hc.client5.http.headers - http-outgoing-0 >> Content-Type: application/json
2024-06-03 15:14:59 DEBUG org.apache.hc.client5.http.headers - http-outgoing-0 >> Accept-Encoding: gzip, x-gzip, deflate
2024-06-03 15:14:59 DEBUG org.apache.hc.client5.http.headers - http-outgoing-0 >> Content-Length: 24
2024-06-03 15:14:59 DEBUG org.apache.hc.client5.http.headers - http-outgoing-0 >> Host: localhost:8080
2024-06-03 15:14:59 DEBUG org.apache.hc.client5.http.headers - http-outgoing-0 >> Connection: keep-alive
2024-06-03 15:14:59 DEBUG org.apache.hc.client5.http.headers - http-outgoing-0 >> User-Agent: Apache-HttpClient/5.2.3 (Java/17.0.11)
2024-06-03 15:14:59 DEBUG org.apache.hc.client5.http.wire - http-outgoing-0 >> "POST /person HTTP/1.1[\r][\n]"
2024-06-03 15:14:59 DEBUG org.apache.hc.client5.http.wire - http-outgoing-0 >> "Content-Type: application/json[\r][\n]"
2024-06-03 15:14:59 DEBUG org.apache.hc.client5.http.wire - http-outgoing-0 >> "Accept-Encoding: gzip, x-gzip, deflate[\r][\n]"
2024-06-03 15:14:59 DEBUG org.apache.hc.client5.http.wire - http-outgoing-0 >> "Content-Length: 24[\r][\n]"
2024-06-03 15:14:59 DEBUG org.apache.hc.client5.http.wire - http-outgoing-0 >> "Host: localhost:8080[\r][\n]"
2024-06-03 15:14:59 DEBUG org.apache.hc.client5.http.wire - http-outgoing-0 >> "Connection: keep-alive[\r][\n]"
2024-06-03 15:14:59 DEBUG org.apache.hc.client5.http.wire - http-outgoing-0 >> "User-Agent: Apache-HttpClient/5.2.3 (Java/17.0.11)[\r][\n]"
2024-06-03 15:14:59 DEBUG org.apache.hc.client5.http.wire - http-outgoing-0 >> "[\r][\n]"
2024-06-03 15:14:59 DEBUG org.apache.hc.client5.http.wire - http-outgoing-0 >> "{"age":32,"name":"vini"}"
2024-06-03 15:14:59 DEBUG o.a.h.c.h.s.SSLConnectionSocketFactory - Enabled protocols: [TLSv1.3, TLSv1.2]
2024-06-03 15:14:59 DEBUG o.a.h.c.h.s.SSLConnectionSocketFactory - Enabled cipher suites: [TLS_AES_256_GCM_SHA384, TLS_AES_128_GCM_SHA256, TLS_CHACHA20_POLY1305_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256, TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, TLS_DHE_RSA_WITH_AES_256_GCM_SHA384, TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256, TLS_DHE_DSS_WITH_AES_256_GCM_SHA384, TLS_DHE_RSA_WITH_AES_128_GCM_SHA256, TLS_DHE_DSS_WITH_AES_128_GCM_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256, TLS_DHE_RSA_WITH_AES_256_CBC_SHA256, TLS_DHE_DSS_WITH_AES_256_CBC_SHA256, TLS_DHE_RSA_WITH_AES_128_CBC_SHA256, TLS_DHE_DSS_WITH_AES_128_CBC_SHA256, TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384, TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256, TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256, TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384, TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384, TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256, TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_DHE_RSA_WITH_AES_256_CBC_SHA, TLS_DHE_DSS_WITH_AES_256_CBC_SHA, TLS_DHE_RSA_WITH_AES_128_CBC_SHA, TLS_DHE_DSS_WITH_AES_128_CBC_SHA, TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDH_RSA_WITH_AES_256_CBC_SHA, TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDH_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_256_GCM_SHA384, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA256, TLS_RSA_WITH_AES_128_CBC_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA, TLS_EMPTY_RENEGOTIATION_INFO_SCSV]
2024-06-03 15:14:59 DEBUG o.a.h.c.h.s.SSLConnectionSocketFactory - Starting handshake (null)
2024-06-03 15:14:59 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FIND_COORDINATOR response from node 1001 for request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=9, headerVersion=2): FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[])
2024-06-03 15:14:59 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FindCoordinator response ClientResponse(receivedTimeMs=1717438499854, latencyMs=92, disconnected=false, timedOut=false, requestHeader=RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=9, headerVersion=2), responseBody=FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[]))
2024-06-03 15:14:59 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Group coordinator lookup failed: The coordinator is not available.
2024-06-03 15:14:59 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Coordinator discovery failed, refreshing metadata
org.apache.kafka.common.errors.CoordinatorNotAvailableException: The coordinator is not available.
2024-06-03 15:14:59 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:14:59 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=10, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:14:59 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-06-03 15:14:59 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-06-03 15:14:59 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2024-06-03 15:15:00 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=10, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=5, name='person-async', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:00 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Error while fetching metadata with correlation id 10 : {person-async=LEADER_NOT_AVAILABLE}
2024-06-03 15:15:00 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Requesting metadata update for topic person-async due to error LEADER_NOT_AVAILABLE
2024-06-03 15:15:00 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updated cluster metadata updateVersion 6 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:00 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FindCoordinator request to broker localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:00 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FIND_COORDINATOR request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=11, headerVersion=2) and timeout 30000 to node 1001: FindCoordinatorRequestData(key='reactive-api', keyType=0, coordinatorKeys=[])
2024-06-03 15:15:00 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FIND_COORDINATOR response from node 1001 for request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=11, headerVersion=2): FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[])
2024-06-03 15:15:00 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FindCoordinator response ClientResponse(receivedTimeMs=1717438500052, latencyMs=42, disconnected=false, timedOut=false, requestHeader=RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=11, headerVersion=2), responseBody=FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[]))
2024-06-03 15:15:00 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Group coordinator lookup failed: The coordinator is not available.
2024-06-03 15:15:00 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Coordinator discovery failed, refreshing metadata
org.apache.kafka.common.errors.CoordinatorNotAvailableException: The coordinator is not available.
2024-06-03 15:15:00 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:00 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=12, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:00 DEBUG o.a.h.c.h.s.SSLConnectionSocketFactory - Secure session established
2024-06-03 15:15:00 DEBUG o.a.h.c.h.s.SSLConnectionSocketFactory -  negotiated protocol: TLSv1.3
2024-06-03 15:15:00 DEBUG o.a.h.c.h.s.SSLConnectionSocketFactory -  negotiated cipher suite: TLS_AES_256_GCM_SHA384
2024-06-03 15:15:00 DEBUG o.a.h.c.h.s.SSLConnectionSocketFactory -  peer principal: CN=*.google-analytics.com
2024-06-03 15:15:00 DEBUG o.a.h.c.h.s.SSLConnectionSocketFactory -  peer alternative names: [*.google-analytics.com, region1.app-measurement.com, app-measurement.com, region1.att.app-measurement.com, att.app-measurement.com, region1.analytics.app-measurement.com, analytics.app-measurement.com, region1.app-analytics-services-att.com, app-analytics-services-att.com, region1.app-analytics-services.com, app-analytics-services.com, google-analytics.com, region1.google-analytics.com, ssl.google-analytics.com, www.google-analytics.com, region1.analytics.google.com, googletagmanager.com, www.googletagmanager.com, urchin.com, service.urchin.com, fps.goog, *.fps.goog, googleoptimize.com, www.googleoptimize.com]
2024-06-03 15:15:00 DEBUG o.a.h.c.h.s.SSLConnectionSocketFactory -  issuer principal: CN=GTS CA 1C3, O=Google Trust Services LLC, C=US
2024-06-03 15:15:00 DEBUG o.a.h.c.h.i.i.DefaultManagedHttpClientConnection - http-outgoing-1 set socket timeout to 3 MINUTES
2024-06-03 15:15:00 DEBUG o.a.h.c.h.i.i.DefaultHttpClientConnectionOperator - www.google-analytics.com:443 connected null->www.google-analytics.com/216.239.32.178:443 as http-outgoing-1
2024-06-03 15:15:00 DEBUG o.a.h.c.h.i.i.PoolingHttpClientConnectionManager - ep-0000000001 connected http-outgoing-1
2024-06-03 15:15:00 DEBUG o.a.h.c.h.i.c.InternalHttpClient - ep-0000000001 endpoint connected
2024-06-03 15:15:00 DEBUG o.a.h.c.h.i.classic.MainClientExec - ex-0000000002 executing POST /collect HTTP/1.1
2024-06-03 15:15:00 DEBUG o.a.h.c.h.protocol.RequestAddCookies - ex-0000000002 Cookie spec selected: strict
2024-06-03 15:15:00 DEBUG o.a.h.c.h.i.c.InternalHttpClient - ep-0000000001 start execution ex-0000000002
2024-06-03 15:15:00 DEBUG o.a.h.c.h.i.i.PoolingHttpClientConnectionManager - ep-0000000001 executing exchange ex-0000000002 over http-outgoing-1
2024-06-03 15:15:00 DEBUG org.apache.hc.client5.http.headers - http-outgoing-1 >> POST /collect HTTP/1.1
2024-06-03 15:15:00 DEBUG org.apache.hc.client5.http.headers - http-outgoing-1 >> Accept-Encoding: gzip, x-gzip, deflate
2024-06-03 15:15:00 DEBUG org.apache.hc.client5.http.headers - http-outgoing-1 >> Content-Length: 235
2024-06-03 15:15:00 DEBUG org.apache.hc.client5.http.headers - http-outgoing-1 >> Content-Type: application/x-www-form-urlencoded; charset=ISO-8859-1
2024-06-03 15:15:00 DEBUG org.apache.hc.client5.http.headers - http-outgoing-1 >> Host: www.google-analytics.com
2024-06-03 15:15:00 DEBUG org.apache.hc.client5.http.headers - http-outgoing-1 >> Connection: keep-alive
2024-06-03 15:15:00 DEBUG org.apache.hc.client5.http.headers - http-outgoing-1 >> User-Agent: Apache-HttpClient/5.2.3 (Java/17.0.11)
2024-06-03 15:15:00 DEBUG org.apache.hc.client5.http.wire - http-outgoing-1 >> "POST /collect HTTP/1.1[\r][\n]"
2024-06-03 15:15:00 DEBUG org.apache.hc.client5.http.wire - http-outgoing-1 >> "Accept-Encoding: gzip, x-gzip, deflate[\r][\n]"
2024-06-03 15:15:00 DEBUG org.apache.hc.client5.http.wire - http-outgoing-1 >> "Content-Length: 235[\r][\n]"
2024-06-03 15:15:00 DEBUG org.apache.hc.client5.http.wire - http-outgoing-1 >> "Content-Type: application/x-www-form-urlencoded; charset=ISO-8859-1[\r][\n]"
2024-06-03 15:15:00 DEBUG org.apache.hc.client5.http.wire - http-outgoing-1 >> "Host: www.google-analytics.com[\r][\n]"
2024-06-03 15:15:00 DEBUG org.apache.hc.client5.http.wire - http-outgoing-1 >> "Connection: keep-alive[\r][\n]"
2024-06-03 15:15:00 DEBUG org.apache.hc.client5.http.wire - http-outgoing-1 >> "User-Agent: Apache-HttpClient/5.2.3 (Java/17.0.11)[\r][\n]"
2024-06-03 15:15:00 DEBUG org.apache.hc.client5.http.wire - http-outgoing-1 >> "[\r][\n]"
2024-06-03 15:15:00 DEBUG org.apache.hc.client5.http.wire - http-outgoing-1 >> "v=1&t=event&tid=UA-117778936-1&cid=715096cfa7c50217e42d26d3aaf886d8&an=pact-jvm&aid=pact-jvm&av=4.4.9&aip=true&ds=client&cd2=unknown&cd3=mac+os+x-x86_64&cd6=junit5&cd7=17.0.11%2B9-LTS&el=Pacts+verified&ec=ProviderTest&ea=Completed&ev=1"
2024-06-03 15:15:00 DEBUG org.apache.hc.client5.http.wire - http-outgoing-1 << "HTTP/1.1 200 OK[\r][\n]"
2024-06-03 15:15:00 DEBUG org.apache.hc.client5.http.wire - http-outgoing-1 << "Access-Control-Allow-Origin: *[\r][\n]"
2024-06-03 15:15:00 DEBUG org.apache.hc.client5.http.wire - http-outgoing-1 << "Date: Mon, 03 Jun 2024 18:15:00 GMT[\r][\n]"
2024-06-03 15:15:00 DEBUG org.apache.hc.client5.http.wire - http-outgoing-1 << "Pragma: no-cache[\r][\n]"
2024-06-03 15:15:00 DEBUG org.apache.hc.client5.http.wire - http-outgoing-1 << "Expires: Fri, 01 Jan 1990 00:00:00 GMT[\r][\n]"
2024-06-03 15:15:00 DEBUG org.apache.hc.client5.http.wire - http-outgoing-1 << "Cache-Control: no-cache, no-store, must-revalidate[\r][\n]"
2024-06-03 15:15:00 DEBUG org.apache.hc.client5.http.wire - http-outgoing-1 << "Last-Modified: Sun, 17 May 1998 03:00:00 GMT[\r][\n]"
2024-06-03 15:15:00 DEBUG org.apache.hc.client5.http.wire - http-outgoing-1 << "X-Content-Type-Options: nosniff[\r][\n]"
2024-06-03 15:15:00 DEBUG org.apache.hc.client5.http.wire - http-outgoing-1 << "Content-Type: image/gif[\r][\n]"
2024-06-03 15:15:00 DEBUG org.apache.hc.client5.http.wire - http-outgoing-1 << "Cross-Origin-Resource-Policy: cross-origin[\r][\n]"
2024-06-03 15:15:00 DEBUG org.apache.hc.client5.http.wire - http-outgoing-1 << "Server: Golfe2[\r][\n]"
2024-06-03 15:15:00 DEBUG org.apache.hc.client5.http.wire - http-outgoing-1 << "Content-Length: 35[\r][\n]"
2024-06-03 15:15:00 DEBUG org.apache.hc.client5.http.wire - http-outgoing-1 << "Alt-Svc: h3=":443"; ma=2592000,h3-29=":443"; ma=2592000[\r][\n]"
2024-06-03 15:15:00 DEBUG org.apache.hc.client5.http.wire - http-outgoing-1 << "[\r][\n]"
2024-06-03 15:15:00 DEBUG org.apache.hc.client5.http.wire - http-outgoing-1 << "GIF89a[0x1][0x0][0x1][0x0][0xffffff80][0xffffffff][0x0][0xffffffff][0xffffffff][0xffffffff][0x0][0x0][0x0],[0x0][0x0][0x0][0x0][0x1][0x0][0x1][0x0][0x0][0x2][0x2]D[0x1][0x0];"
2024-06-03 15:15:00 DEBUG org.apache.hc.client5.http.headers - http-outgoing-1 << HTTP/1.1 200 OK
2024-06-03 15:15:00 DEBUG org.apache.hc.client5.http.headers - http-outgoing-1 << Access-Control-Allow-Origin: *
2024-06-03 15:15:00 DEBUG org.apache.hc.client5.http.headers - http-outgoing-1 << Date: Mon, 03 Jun 2024 18:15:00 GMT
2024-06-03 15:15:00 DEBUG org.apache.hc.client5.http.headers - http-outgoing-1 << Pragma: no-cache
2024-06-03 15:15:00 DEBUG org.apache.hc.client5.http.headers - http-outgoing-1 << Expires: Fri, 01 Jan 1990 00:00:00 GMT
2024-06-03 15:15:00 DEBUG org.apache.hc.client5.http.headers - http-outgoing-1 << Cache-Control: no-cache, no-store, must-revalidate
2024-06-03 15:15:00 DEBUG org.apache.hc.client5.http.headers - http-outgoing-1 << Last-Modified: Sun, 17 May 1998 03:00:00 GMT
2024-06-03 15:15:00 DEBUG org.apache.hc.client5.http.headers - http-outgoing-1 << X-Content-Type-Options: nosniff
2024-06-03 15:15:00 DEBUG org.apache.hc.client5.http.headers - http-outgoing-1 << Content-Type: image/gif
2024-06-03 15:15:00 DEBUG org.apache.hc.client5.http.headers - http-outgoing-1 << Cross-Origin-Resource-Policy: cross-origin
2024-06-03 15:15:00 DEBUG org.apache.hc.client5.http.headers - http-outgoing-1 << Server: Golfe2
2024-06-03 15:15:00 DEBUG org.apache.hc.client5.http.headers - http-outgoing-1 << Content-Length: 35
2024-06-03 15:15:00 DEBUG org.apache.hc.client5.http.headers - http-outgoing-1 << Alt-Svc: h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
2024-06-03 15:15:00 DEBUG o.a.h.c.h.i.classic.MainClientExec - ex-0000000002 connection can be kept alive for 3 MINUTES
2024-06-03 15:15:00 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=12, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=5, name='person-async', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:00 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Error while fetching metadata with correlation id 12 : {person-async=LEADER_NOT_AVAILABLE}
2024-06-03 15:15:00 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Requesting metadata update for topic person-async due to error LEADER_NOT_AVAILABLE
2024-06-03 15:15:00 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updated cluster metadata updateVersion 7 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:00 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FindCoordinator request to broker localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:00 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FIND_COORDINATOR request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=13, headerVersion=2) and timeout 30000 to node 1001: FindCoordinatorRequestData(key='reactive-api', keyType=0, coordinatorKeys=[])
2024-06-03 15:15:00 DEBUG o.a.h.c.h.i.c.InternalHttpClient - ep-0000000001 releasing valid endpoint
2024-06-03 15:15:00 DEBUG o.a.h.c.h.i.i.PoolingHttpClientConnectionManager - ep-0000000001 releasing endpoint
2024-06-03 15:15:00 DEBUG o.a.h.c.h.i.i.PoolingHttpClientConnectionManager - ep-0000000001 connection http-outgoing-1 can be kept alive for 3 MINUTES
2024-06-03 15:15:00 DEBUG o.a.h.c.h.i.i.PoolingHttpClientConnectionManager - ep-0000000001 connection released [route: {s}->https://www.google-analytics.com:443][total available: 1; route allocated: 1 of 100; total allocated: 1 of 200]
2024-06-03 15:15:00 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FIND_COORDINATOR response from node 1001 for request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=13, headerVersion=2): FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[])
2024-06-03 15:15:00 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FindCoordinator response ClientResponse(receivedTimeMs=1717438500451, latencyMs=51, disconnected=false, timedOut=false, requestHeader=RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=13, headerVersion=2), responseBody=FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[]))
2024-06-03 15:15:00 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Group coordinator lookup failed: The coordinator is not available.
2024-06-03 15:15:00 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Coordinator discovery failed, refreshing metadata
org.apache.kafka.common.errors.CoordinatorNotAvailableException: The coordinator is not available.
2024-06-03 15:15:00 INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer

2024-06-03 15:15:00 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:00 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=14, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:00 INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
2024-06-03 15:15:00 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=14, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=5, name='person-async', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:00 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Error while fetching metadata with correlation id 14 : {person-async=LEADER_NOT_AVAILABLE}
2024-06-03 15:15:00 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Requesting metadata update for topic person-async due to error LEADER_NOT_AVAILABLE
2024-06-03 15:15:00 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updated cluster metadata updateVersion 8 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:00 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FindCoordinator request to broker localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:00 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FIND_COORDINATOR request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=15, headerVersion=2) and timeout 30000 to node 1001: FindCoordinatorRequestData(key='reactive-api', keyType=0, coordinatorKeys=[])
2024-06-03 15:15:00 DEBUG o.a.k.c.producer.internals.Sender - [Producer clientId=producer-1] Starting Kafka producer I/O thread.
2024-06-03 15:15:00 DEBUG o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] Transition from state UNINITIALIZED to INITIALIZING
2024-06-03 15:15:00 INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.1
2024-06-03 15:15:00 INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 5e3c2b738d253ff5
2024-06-03 15:15:00 INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1717438500599
2024-06-03 15:15:00 DEBUG o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] Enqueuing transactional request InitProducerIdRequestData(transactionalId=null, transactionTimeoutMs=2147483647, producerId=-1, producerEpoch=-1)
2024-06-03 15:15:00 DEBUG o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Kafka producer started
2024-06-03 15:15:00 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Initialize connection to node localhost:9092 (id: -1 rack: null) for sending metadata request
2024-06-03 15:15:00 DEBUG o.apache.kafka.clients.ClientUtils - Resolved host localhost as 127.0.0.1
2024-06-03 15:15:00 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Initiating connection to node localhost:9092 (id: -1 rack: null) using address localhost/127.0.0.1
2024-06-03 15:15:00 DEBUG o.a.kafka.common.network.Selector - [Producer clientId=producer-1] Created socket with SO_RCVBUF = 326640, SO_SNDBUF = 146988, SO_TIMEOUT = 0 to node -1
2024-06-03 15:15:00 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Completed connection to node -1. Fetching API versions.
2024-06-03 15:15:00 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Initiating API versions fetch from node -1.
2024-06-03 15:15:00 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending API_VERSIONS request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=producer-1, correlationId=0, headerVersion=2) and timeout 30000 to node -1: ApiVersionsRequestData(clientSoftwareName='apache-kafka-java', clientSoftwareVersion='3.6.1')
2024-06-03 15:15:00 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Received API_VERSIONS response from node -1 for request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=producer-1, correlationId=0, headerVersion=2): ApiVersionsResponseData(errorCode=0, apiKeys=[ApiVersion(apiKey=0, minVersion=0, maxVersion=8), ApiVersion(apiKey=1, minVersion=0, maxVersion=12), ApiVersion(apiKey=2, minVersion=0, maxVersion=5), ApiVersion(apiKey=3, minVersion=0, maxVersion=9), ApiVersion(apiKey=4, minVersion=0, maxVersion=4), ApiVersion(apiKey=5, minVersion=0, maxVersion=3), ApiVersion(apiKey=6, minVersion=0, maxVersion=6), ApiVersion(apiKey=7, minVersion=0, maxVersion=3), ApiVersion(apiKey=8, minVersion=0, maxVersion=8), ApiVersion(apiKey=9, minVersion=0, maxVersion=7), ApiVersion(apiKey=10, minVersion=0, maxVersion=3), ApiVersion(apiKey=11, minVersion=0, maxVersion=7), ApiVersion(apiKey=12, minVersion=0, maxVersion=4), ApiVersion(apiKey=13, minVersion=0, maxVersion=4), ApiVersion(apiKey=14, minVersion=0, maxVersion=5), ApiVersion(apiKey=15, minVersion=0, maxVersion=5), ApiVersion(apiKey=16, minVersion=0, maxVersion=4), ApiVersion(apiKey=17, minVersion=0, maxVersion=1), ApiVersion(apiKey=18, minVersion=0, maxVersion=3), ApiVersion(apiKey=19, minVersion=0, maxVersion=6), ApiVersion(apiKey=20, minVersion=0, maxVersion=5), ApiVersion(apiKey=21, minVersion=0, maxVersion=2), ApiVersion(apiKey=22, minVersion=0, maxVersion=4), ApiVersion(apiKey=23, minVersion=0, maxVersion=3), ApiVersion(apiKey=24, minVersion=0, maxVersion=2), ApiVersion(apiKey=25, minVersion=0, maxVersion=2), ApiVersion(apiKey=26, minVersion=0, maxVersion=2), ApiVersion(apiKey=27, minVersion=0, maxVersion=0), ApiVersion(apiKey=28, minVersion=0, maxVersion=3), ApiVersion(apiKey=29, minVersion=0, maxVersion=2), ApiVersion(apiKey=30, minVersion=0, maxVersion=2), ApiVersion(apiKey=31, minVersion=0, maxVersion=2), ApiVersion(apiKey=32, minVersion=0, maxVersion=3), ApiVersion(apiKey=33, minVersion=0, maxVersion=1), ApiVersion(apiKey=34, minVersion=0, maxVersion=1), ApiVersion(apiKey=35, minVersion=0, maxVersion=2), ApiVersion(apiKey=36, minVersion=0, maxVersion=2), ApiVersion(apiKey=37, minVersion=0, maxVersion=3), ApiVersion(apiKey=38, minVersion=0, maxVersion=2), ApiVersion(apiKey=39, minVersion=0, maxVersion=2), ApiVersion(apiKey=40, minVersion=0, maxVersion=2), ApiVersion(apiKey=41, minVersion=0, maxVersion=2), ApiVersion(apiKey=42, minVersion=0, maxVersion=2), ApiVersion(apiKey=43, minVersion=0, maxVersion=2), ApiVersion(apiKey=44, minVersion=0, maxVersion=1), ApiVersion(apiKey=45, minVersion=0, maxVersion=0), ApiVersion(apiKey=46, minVersion=0, maxVersion=0), ApiVersion(apiKey=47, minVersion=0, maxVersion=0), ApiVersion(apiKey=48, minVersion=0, maxVersion=0), ApiVersion(apiKey=49, minVersion=0, maxVersion=0), ApiVersion(apiKey=50, minVersion=0, maxVersion=0), ApiVersion(apiKey=51, minVersion=0, maxVersion=0), ApiVersion(apiKey=56, minVersion=0, maxVersion=0), ApiVersion(apiKey=57, minVersion=0, maxVersion=0)], throttleTimeMs=0, supportedFeatures=[], finalizedFeaturesEpoch=0, finalizedFeatures=[], zkMigrationReady=false)
2024-06-03 15:15:00 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node -1 has finalized features epoch: 0, finalized features: [], supported features: [], ZK migration ready: false, API versions: (Produce(0): 0 to 8 [usable: 8], Fetch(1): 0 to 12 [usable: 12], ListOffsets(2): 0 to 5 [usable: 5], Metadata(3): 0 to 9 [usable: 9], LeaderAndIsr(4): 0 to 4 [usable: 4], StopReplica(5): 0 to 3 [usable: 3], UpdateMetadata(6): 0 to 6 [usable: 6], ControlledShutdown(7): 0 to 3 [usable: 3], OffsetCommit(8): 0 to 8 [usable: 8], OffsetFetch(9): 0 to 7 [usable: 7], FindCoordinator(10): 0 to 3 [usable: 3], JoinGroup(11): 0 to 7 [usable: 7], Heartbeat(12): 0 to 4 [usable: 4], LeaveGroup(13): 0 to 4 [usable: 4], SyncGroup(14): 0 to 5 [usable: 5], DescribeGroups(15): 0 to 5 [usable: 5], ListGroups(16): 0 to 4 [usable: 4], SaslHandshake(17): 0 to 1 [usable: 1], ApiVersions(18): 0 to 3 [usable: 3], CreateTopics(19): 0 to 6 [usable: 6], DeleteTopics(20): 0 to 5 [usable: 5], DeleteRecords(21): 0 to 2 [usable: 2], InitProducerId(22): 0 to 4 [usable: 4], OffsetForLeaderEpoch(23): 0 to 3 [usable: 3], AddPartitionsToTxn(24): 0 to 2 [usable: 2], AddOffsetsToTxn(25): 0 to 2 [usable: 2], EndTxn(26): 0 to 2 [usable: 2], WriteTxnMarkers(27): 0 [usable: 0], TxnOffsetCommit(28): 0 to 3 [usable: 3], DescribeAcls(29): 0 to 2 [usable: 2], CreateAcls(30): 0 to 2 [usable: 2], DeleteAcls(31): 0 to 2 [usable: 2], DescribeConfigs(32): 0 to 3 [usable: 3], AlterConfigs(33): 0 to 1 [usable: 1], AlterReplicaLogDirs(34): 0 to 1 [usable: 1], DescribeLogDirs(35): 0 to 2 [usable: 2], SaslAuthenticate(36): 0 to 2 [usable: 2], CreatePartitions(37): 0 to 3 [usable: 3], CreateDelegationToken(38): 0 to 2 [usable: 2], RenewDelegationToken(39): 0 to 2 [usable: 2], ExpireDelegationToken(40): 0 to 2 [usable: 2], DescribeDelegationToken(41): 0 to 2 [usable: 2], DeleteGroups(42): 0 to 2 [usable: 2], ElectLeaders(43): 0 to 2 [usable: 2], IncrementalAlterConfigs(44): 0 to 1 [usable: 1], AlterPartitionReassignments(45): 0 [usable: 0], ListPartitionReassignments(46): 0 [usable: 0], OffsetDelete(47): 0 [usable: 0], DescribeClientQuotas(48): 0 [usable: 0], AlterClientQuotas(49): 0 [usable: 0], DescribeUserScramCredentials(50): 0 [usable: 0], AlterUserScramCredentials(51): 0 [usable: 0], DescribeQuorum(55): UNSUPPORTED, AlterPartition(56): 0 [usable: 0], UpdateFeatures(57): 0 [usable: 0], Envelope(58): UNSUPPORTED, DescribeCluster(60): UNSUPPORTED, DescribeProducers(61): UNSUPPORTED, UnregisterBroker(64): UNSUPPORTED, DescribeTransactions(65): UNSUPPORTED, ListTransactions(66): UNSUPPORTED, AllocateProducerIds(67): UNSUPPORTED, ConsumerGroupHeartbeat(68): UNSUPPORTED).
2024-06-03 15:15:00 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: -1 rack: null)
2024-06-03 15:15:00 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=producer-1, correlationId=1, headerVersion=2) and timeout 30000 to node -1: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:00 DEBUG o.a.k.c.producer.internals.Sender - [Producer clientId=producer-1] Sending transactional request InitProducerIdRequestData(transactionalId=null, transactionTimeoutMs=2147483647, producerId=-1, producerEpoch=-1) to node localhost:9092 (id: -1 rack: null) with correlation ID 2
2024-06-03 15:15:00 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending INIT_PRODUCER_ID request with header RequestHeader(apiKey=INIT_PRODUCER_ID, apiVersion=4, clientId=producer-1, correlationId=2, headerVersion=2) and timeout 30000 to node -1: InitProducerIdRequestData(transactionalId=null, transactionTimeoutMs=2147483647, producerId=-1, producerEpoch=-1)
2024-06-03 15:15:00 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:00 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=16, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:00 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FIND_COORDINATOR response from node 1001 for request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=15, headerVersion=2): FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[])
2024-06-03 15:15:00 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FindCoordinator response ClientResponse(receivedTimeMs=1717438500817, latencyMs=254, disconnected=false, timedOut=false, requestHeader=RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=15, headerVersion=2), responseBody=FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[]))
2024-06-03 15:15:00 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Group coordinator lookup failed: The coordinator is not available.
2024-06-03 15:15:00 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Coordinator discovery failed, refreshing metadata
org.apache.kafka.common.errors.CoordinatorNotAvailableException: The coordinator is not available.
2024-06-03 15:15:00 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=16, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=5, name='person-async', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:00 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Error while fetching metadata with correlation id 16 : {person-async=LEADER_NOT_AVAILABLE}
2024-06-03 15:15:00 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Requesting metadata update for topic person-async due to error LEADER_NOT_AVAILABLE
2024-06-03 15:15:00 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updated cluster metadata updateVersion 9 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:00 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FindCoordinator request to broker localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:00 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FIND_COORDINATOR request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=17, headerVersion=2) and timeout 30000 to node 1001: FindCoordinatorRequestData(key='reactive-api', keyType=0, coordinatorKeys=[])
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Received METADATA response from node -1 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=producer-1, correlationId=1, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=5, name='person', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:01 WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Error while fetching metadata with correlation id 1 : {person=LEADER_NOT_AVAILABLE}
2024-06-03 15:15:01 DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Requesting metadata update for topic person due to error LEADER_NOT_AVAILABLE
2024-06-03 15:15:01 INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: Fum51fZvSd-Zb755_Ztrdw
2024-06-03 15:15:01 DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Updated cluster metadata updateVersion 2 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=18, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FIND_COORDINATOR response from node 1001 for request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=17, headerVersion=2): FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[])
2024-06-03 15:15:01 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FindCoordinator response ClientResponse(receivedTimeMs=1717438501087, latencyMs=127, disconnected=false, timedOut=false, requestHeader=RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=17, headerVersion=2), responseBody=FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[]))
2024-06-03 15:15:01 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Group coordinator lookup failed: The coordinator is not available.
2024-06-03 15:15:01 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Coordinator discovery failed, refreshing metadata
org.apache.kafka.common.errors.CoordinatorNotAvailableException: The coordinator is not available.
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Received INIT_PRODUCER_ID response from node -1 for request with header RequestHeader(apiKey=INIT_PRODUCER_ID, apiVersion=4, clientId=producer-1, correlationId=2, headerVersion=2): InitProducerIdResponseData(throttleTimeMs=0, errorCode=0, producerId=0, producerEpoch=0)
2024-06-03 15:15:01 INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 0 with epoch 0
2024-06-03 15:15:01 DEBUG o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] Transition from state INITIALIZING to READY
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Initialize connection to node localhost:9092 (id: 1001 rack: null) for sending metadata request
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.ClientUtils - Resolved host localhost as 127.0.0.1
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Initiating connection to node localhost:9092 (id: 1001 rack: null) using address localhost/127.0.0.1
2024-06-03 15:15:01 DEBUG o.a.kafka.common.network.Selector - [Producer clientId=producer-1] Created socket with SO_RCVBUF = 326640, SO_SNDBUF = 146988, SO_TIMEOUT = 0 to node 1001
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Completed connection to node 1001. Fetching API versions.
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Initiating API versions fetch from node 1001.
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending API_VERSIONS request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=producer-1, correlationId=3, headerVersion=2) and timeout 30000 to node 1001: ApiVersionsRequestData(clientSoftwareName='apache-kafka-java', clientSoftwareVersion='3.6.1')
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=18, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=5, name='person-async', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:01 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Error while fetching metadata with correlation id 18 : {person-async=LEADER_NOT_AVAILABLE}
2024-06-03 15:15:01 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Requesting metadata update for topic person-async due to error LEADER_NOT_AVAILABLE
2024-06-03 15:15:01 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updated cluster metadata updateVersion 10 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:01 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FindCoordinator request to broker localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FIND_COORDINATOR request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=19, headerVersion=2) and timeout 30000 to node 1001: FindCoordinatorRequestData(key='reactive-api', keyType=0, coordinatorKeys=[])
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Received API_VERSIONS response from node 1001 for request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=producer-1, correlationId=3, headerVersion=2): ApiVersionsResponseData(errorCode=0, apiKeys=[ApiVersion(apiKey=0, minVersion=0, maxVersion=8), ApiVersion(apiKey=1, minVersion=0, maxVersion=12), ApiVersion(apiKey=2, minVersion=0, maxVersion=5), ApiVersion(apiKey=3, minVersion=0, maxVersion=9), ApiVersion(apiKey=4, minVersion=0, maxVersion=4), ApiVersion(apiKey=5, minVersion=0, maxVersion=3), ApiVersion(apiKey=6, minVersion=0, maxVersion=6), ApiVersion(apiKey=7, minVersion=0, maxVersion=3), ApiVersion(apiKey=8, minVersion=0, maxVersion=8), ApiVersion(apiKey=9, minVersion=0, maxVersion=7), ApiVersion(apiKey=10, minVersion=0, maxVersion=3), ApiVersion(apiKey=11, minVersion=0, maxVersion=7), ApiVersion(apiKey=12, minVersion=0, maxVersion=4), ApiVersion(apiKey=13, minVersion=0, maxVersion=4), ApiVersion(apiKey=14, minVersion=0, maxVersion=5), ApiVersion(apiKey=15, minVersion=0, maxVersion=5), ApiVersion(apiKey=16, minVersion=0, maxVersion=4), ApiVersion(apiKey=17, minVersion=0, maxVersion=1), ApiVersion(apiKey=18, minVersion=0, maxVersion=3), ApiVersion(apiKey=19, minVersion=0, maxVersion=6), ApiVersion(apiKey=20, minVersion=0, maxVersion=5), ApiVersion(apiKey=21, minVersion=0, maxVersion=2), ApiVersion(apiKey=22, minVersion=0, maxVersion=4), ApiVersion(apiKey=23, minVersion=0, maxVersion=3), ApiVersion(apiKey=24, minVersion=0, maxVersion=2), ApiVersion(apiKey=25, minVersion=0, maxVersion=2), ApiVersion(apiKey=26, minVersion=0, maxVersion=2), ApiVersion(apiKey=27, minVersion=0, maxVersion=0), ApiVersion(apiKey=28, minVersion=0, maxVersion=3), ApiVersion(apiKey=29, minVersion=0, maxVersion=2), ApiVersion(apiKey=30, minVersion=0, maxVersion=2), ApiVersion(apiKey=31, minVersion=0, maxVersion=2), ApiVersion(apiKey=32, minVersion=0, maxVersion=3), ApiVersion(apiKey=33, minVersion=0, maxVersion=1), ApiVersion(apiKey=34, minVersion=0, maxVersion=1), ApiVersion(apiKey=35, minVersion=0, maxVersion=2), ApiVersion(apiKey=36, minVersion=0, maxVersion=2), ApiVersion(apiKey=37, minVersion=0, maxVersion=3), ApiVersion(apiKey=38, minVersion=0, maxVersion=2), ApiVersion(apiKey=39, minVersion=0, maxVersion=2), ApiVersion(apiKey=40, minVersion=0, maxVersion=2), ApiVersion(apiKey=41, minVersion=0, maxVersion=2), ApiVersion(apiKey=42, minVersion=0, maxVersion=2), ApiVersion(apiKey=43, minVersion=0, maxVersion=2), ApiVersion(apiKey=44, minVersion=0, maxVersion=1), ApiVersion(apiKey=45, minVersion=0, maxVersion=0), ApiVersion(apiKey=46, minVersion=0, maxVersion=0), ApiVersion(apiKey=47, minVersion=0, maxVersion=0), ApiVersion(apiKey=48, minVersion=0, maxVersion=0), ApiVersion(apiKey=49, minVersion=0, maxVersion=0), ApiVersion(apiKey=50, minVersion=0, maxVersion=0), ApiVersion(apiKey=51, minVersion=0, maxVersion=0), ApiVersion(apiKey=56, minVersion=0, maxVersion=0), ApiVersion(apiKey=57, minVersion=0, maxVersion=0)], throttleTimeMs=0, supportedFeatures=[], finalizedFeaturesEpoch=0, finalizedFeatures=[], zkMigrationReady=false)
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1001 has finalized features epoch: 0, finalized features: [], supported features: [], ZK migration ready: false, API versions: (Produce(0): 0 to 8 [usable: 8], Fetch(1): 0 to 12 [usable: 12], ListOffsets(2): 0 to 5 [usable: 5], Metadata(3): 0 to 9 [usable: 9], LeaderAndIsr(4): 0 to 4 [usable: 4], StopReplica(5): 0 to 3 [usable: 3], UpdateMetadata(6): 0 to 6 [usable: 6], ControlledShutdown(7): 0 to 3 [usable: 3], OffsetCommit(8): 0 to 8 [usable: 8], OffsetFetch(9): 0 to 7 [usable: 7], FindCoordinator(10): 0 to 3 [usable: 3], JoinGroup(11): 0 to 7 [usable: 7], Heartbeat(12): 0 to 4 [usable: 4], LeaveGroup(13): 0 to 4 [usable: 4], SyncGroup(14): 0 to 5 [usable: 5], DescribeGroups(15): 0 to 5 [usable: 5], ListGroups(16): 0 to 4 [usable: 4], SaslHandshake(17): 0 to 1 [usable: 1], ApiVersions(18): 0 to 3 [usable: 3], CreateTopics(19): 0 to 6 [usable: 6], DeleteTopics(20): 0 to 5 [usable: 5], DeleteRecords(21): 0 to 2 [usable: 2], InitProducerId(22): 0 to 4 [usable: 4], OffsetForLeaderEpoch(23): 0 to 3 [usable: 3], AddPartitionsToTxn(24): 0 to 2 [usable: 2], AddOffsetsToTxn(25): 0 to 2 [usable: 2], EndTxn(26): 0 to 2 [usable: 2], WriteTxnMarkers(27): 0 [usable: 0], TxnOffsetCommit(28): 0 to 3 [usable: 3], DescribeAcls(29): 0 to 2 [usable: 2], CreateAcls(30): 0 to 2 [usable: 2], DeleteAcls(31): 0 to 2 [usable: 2], DescribeConfigs(32): 0 to 3 [usable: 3], AlterConfigs(33): 0 to 1 [usable: 1], AlterReplicaLogDirs(34): 0 to 1 [usable: 1], DescribeLogDirs(35): 0 to 2 [usable: 2], SaslAuthenticate(36): 0 to 2 [usable: 2], CreatePartitions(37): 0 to 3 [usable: 3], CreateDelegationToken(38): 0 to 2 [usable: 2], RenewDelegationToken(39): 0 to 2 [usable: 2], ExpireDelegationToken(40): 0 to 2 [usable: 2], DescribeDelegationToken(41): 0 to 2 [usable: 2], DeleteGroups(42): 0 to 2 [usable: 2], ElectLeaders(43): 0 to 2 [usable: 2], IncrementalAlterConfigs(44): 0 to 1 [usable: 1], AlterPartitionReassignments(45): 0 [usable: 0], ListPartitionReassignments(46): 0 [usable: 0], OffsetDelete(47): 0 [usable: 0], DescribeClientQuotas(48): 0 [usable: 0], AlterClientQuotas(49): 0 [usable: 0], DescribeUserScramCredentials(50): 0 [usable: 0], AlterUserScramCredentials(51): 0 [usable: 0], DescribeQuorum(55): UNSUPPORTED, AlterPartition(56): 0 [usable: 0], UpdateFeatures(57): 0 [usable: 0], Envelope(58): UNSUPPORTED, DescribeCluster(60): UNSUPPORTED, DescribeProducers(61): UNSUPPORTED, UnregisterBroker(64): UNSUPPORTED, DescribeTransactions(65): UNSUPPORTED, ListTransactions(66): UNSUPPORTED, AllocateProducerIds(67): UNSUPPORTED, ConsumerGroupHeartbeat(68): UNSUPPORTED).
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=producer-1, correlationId=4, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FIND_COORDINATOR response from node 1001 for request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=19, headerVersion=2): FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[])
2024-06-03 15:15:01 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FindCoordinator response ClientResponse(receivedTimeMs=1717438501262, latencyMs=78, disconnected=false, timedOut=false, requestHeader=RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=19, headerVersion=2), responseBody=FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[]))
2024-06-03 15:15:01 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Group coordinator lookup failed: The coordinator is not available.
2024-06-03 15:15:01 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Coordinator discovery failed, refreshing metadata
org.apache.kafka.common.errors.CoordinatorNotAvailableException: The coordinator is not available.
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=20, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=producer-1, correlationId=4, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=5, name='person', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:01 WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Error while fetching metadata with correlation id 4 : {person=LEADER_NOT_AVAILABLE}
2024-06-03 15:15:01 DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Requesting metadata update for topic person due to error LEADER_NOT_AVAILABLE
2024-06-03 15:15:01 DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Updated cluster metadata updateVersion 3 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=20, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=5, name='person-async', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:01 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Error while fetching metadata with correlation id 20 : {person-async=LEADER_NOT_AVAILABLE}
2024-06-03 15:15:01 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Requesting metadata update for topic person-async due to error LEADER_NOT_AVAILABLE
2024-06-03 15:15:01 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updated cluster metadata updateVersion 11 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:01 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FindCoordinator request to broker localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FIND_COORDINATOR request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=21, headerVersion=2) and timeout 30000 to node 1001: FindCoordinatorRequestData(key='reactive-api', keyType=0, coordinatorKeys=[])
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FIND_COORDINATOR response from node 1001 for request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=21, headerVersion=2): FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[])
2024-06-03 15:15:01 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FindCoordinator response ClientResponse(receivedTimeMs=1717438501344, latencyMs=35, disconnected=false, timedOut=false, requestHeader=RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=21, headerVersion=2), responseBody=FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[]))
2024-06-03 15:15:01 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Group coordinator lookup failed: The coordinator is not available.
2024-06-03 15:15:01 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Coordinator discovery failed, refreshing metadata
org.apache.kafka.common.errors.CoordinatorNotAvailableException: The coordinator is not available.
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=producer-1, correlationId=5, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=22, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=producer-1, correlationId=5, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=5, name='person', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:01 WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Error while fetching metadata with correlation id 5 : {person=LEADER_NOT_AVAILABLE}
2024-06-03 15:15:01 DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Requesting metadata update for topic person due to error LEADER_NOT_AVAILABLE
2024-06-03 15:15:01 DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Updated cluster metadata updateVersion 4 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=22, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=5, name='person-async', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:01 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Error while fetching metadata with correlation id 22 : {person-async=LEADER_NOT_AVAILABLE}
2024-06-03 15:15:01 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Requesting metadata update for topic person-async due to error LEADER_NOT_AVAILABLE
2024-06-03 15:15:01 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updated cluster metadata updateVersion 12 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:01 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FindCoordinator request to broker localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FIND_COORDINATOR request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=23, headerVersion=2) and timeout 30000 to node 1001: FindCoordinatorRequestData(key='reactive-api', keyType=0, coordinatorKeys=[])
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=producer-1, correlationId=6, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FIND_COORDINATOR response from node 1001 for request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=23, headerVersion=2): FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[])
2024-06-03 15:15:01 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FindCoordinator response ClientResponse(receivedTimeMs=1717438501549, latencyMs=41, disconnected=false, timedOut=false, requestHeader=RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=23, headerVersion=2), responseBody=FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[]))
2024-06-03 15:15:01 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Group coordinator lookup failed: The coordinator is not available.
2024-06-03 15:15:01 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Coordinator discovery failed, refreshing metadata
org.apache.kafka.common.errors.CoordinatorNotAvailableException: The coordinator is not available.
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=producer-1, correlationId=6, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=5, name='person', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:01 WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Error while fetching metadata with correlation id 6 : {person=LEADER_NOT_AVAILABLE}
2024-06-03 15:15:01 DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Requesting metadata update for topic person due to error LEADER_NOT_AVAILABLE
2024-06-03 15:15:01 DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Updated cluster metadata updateVersion 5 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=24, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=24, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=0, name='person-async', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[MetadataResponsePartition(errorCode=0, partitionIndex=0, leaderId=1001, leaderEpoch=0, replicaNodes=[1001], isrNodes=[1001], offlineReplicas=[])], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:01 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Setting the last seen epoch of partition person-async-0 to 0 since the last known epoch was undefined.
2024-06-03 15:15:01 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updated cluster metadata updateVersion 13 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[PartitionMetadata(error=NONE, partition=person-async-0, leader=Optional[1001], leaderEpoch=Optional[0], replicas=1001, isr=1001, offlineReplicas=)], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:01 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FindCoordinator request to broker localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FIND_COORDINATOR request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=25, headerVersion=2) and timeout 30000 to node 1001: FindCoordinatorRequestData(key='reactive-api', keyType=0, coordinatorKeys=[])
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FIND_COORDINATOR response from node 1001 for request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=25, headerVersion=2): FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[])
2024-06-03 15:15:01 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FindCoordinator response ClientResponse(receivedTimeMs=1717438501651, latencyMs=34, disconnected=false, timedOut=false, requestHeader=RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=25, headerVersion=2), responseBody=FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[]))
2024-06-03 15:15:01 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Group coordinator lookup failed: The coordinator is not available.
2024-06-03 15:15:01 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Coordinator discovery failed, refreshing metadata
org.apache.kafka.common.errors.CoordinatorNotAvailableException: The coordinator is not available.
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=producer-1, correlationId=7, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=producer-1, correlationId=7, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=5, name='person', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:01 WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Error while fetching metadata with correlation id 7 : {person=LEADER_NOT_AVAILABLE}
2024-06-03 15:15:01 DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Requesting metadata update for topic person due to error LEADER_NOT_AVAILABLE
2024-06-03 15:15:01 DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Updated cluster metadata updateVersion 6 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=26, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=26, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=0, name='person-async', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[MetadataResponsePartition(errorCode=0, partitionIndex=0, leaderId=1001, leaderEpoch=0, replicaNodes=[1001], isrNodes=[1001], offlineReplicas=[])], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:01 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updating last seen epoch for partition person-async-0 from 0 to epoch 0 from new metadata
2024-06-03 15:15:01 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updated cluster metadata updateVersion 14 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[PartitionMetadata(error=NONE, partition=person-async-0, leader=Optional[1001], leaderEpoch=Optional[0], replicas=1001, isr=1001, offlineReplicas=)], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:01 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FindCoordinator request to broker localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FIND_COORDINATOR request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=27, headerVersion=2) and timeout 30000 to node 1001: FindCoordinatorRequestData(key='reactive-api', keyType=0, coordinatorKeys=[])
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FIND_COORDINATOR response from node 1001 for request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=27, headerVersion=2): FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[])
2024-06-03 15:15:01 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FindCoordinator response ClientResponse(receivedTimeMs=1717438501758, latencyMs=24, disconnected=false, timedOut=false, requestHeader=RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=27, headerVersion=2), responseBody=FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[]))
2024-06-03 15:15:01 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Group coordinator lookup failed: The coordinator is not available.
2024-06-03 15:15:01 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Coordinator discovery failed, refreshing metadata
org.apache.kafka.common.errors.CoordinatorNotAvailableException: The coordinator is not available.
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=producer-1, correlationId=8, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=28, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=28, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=0, name='person-async', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[MetadataResponsePartition(errorCode=0, partitionIndex=0, leaderId=1001, leaderEpoch=0, replicaNodes=[1001], isrNodes=[1001], offlineReplicas=[])], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:01 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updating last seen epoch for partition person-async-0 from 0 to epoch 0 from new metadata
2024-06-03 15:15:01 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updated cluster metadata updateVersion 15 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[PartitionMetadata(error=NONE, partition=person-async-0, leader=Optional[1001], leaderEpoch=Optional[0], replicas=1001, isr=1001, offlineReplicas=)], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:01 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FindCoordinator request to broker localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FIND_COORDINATOR request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=29, headerVersion=2) and timeout 30000 to node 1001: FindCoordinatorRequestData(key='reactive-api', keyType=0, coordinatorKeys=[])
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=producer-1, correlationId=8, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=5, name='person', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:01 WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Error while fetching metadata with correlation id 8 : {person=LEADER_NOT_AVAILABLE}
2024-06-03 15:15:01 DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Requesting metadata update for topic person due to error LEADER_NOT_AVAILABLE
2024-06-03 15:15:01 DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Updated cluster metadata updateVersion 7 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FIND_COORDINATOR response from node 1001 for request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=29, headerVersion=2): FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[])
2024-06-03 15:15:01 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FindCoordinator response ClientResponse(receivedTimeMs=1717438501895, latencyMs=53, disconnected=false, timedOut=false, requestHeader=RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=29, headerVersion=2), responseBody=FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[]))
2024-06-03 15:15:01 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Group coordinator lookup failed: The coordinator is not available.
2024-06-03 15:15:01 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Coordinator discovery failed, refreshing metadata
org.apache.kafka.common.errors.CoordinatorNotAvailableException: The coordinator is not available.
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=30, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=30, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=0, name='person-async', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[MetadataResponsePartition(errorCode=0, partitionIndex=0, leaderId=1001, leaderEpoch=0, replicaNodes=[1001], isrNodes=[1001], offlineReplicas=[])], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:01 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updating last seen epoch for partition person-async-0 from 0 to epoch 0 from new metadata
2024-06-03 15:15:01 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updated cluster metadata updateVersion 16 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[PartitionMetadata(error=NONE, partition=person-async-0, leader=Optional[1001], leaderEpoch=Optional[0], replicas=1001, isr=1001, offlineReplicas=)], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:01 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FindCoordinator request to broker localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FIND_COORDINATOR request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=31, headerVersion=2) and timeout 30000 to node 1001: FindCoordinatorRequestData(key='reactive-api', keyType=0, coordinatorKeys=[])
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=producer-1, correlationId=9, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FIND_COORDINATOR response from node 1001 for request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=31, headerVersion=2): FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[])
2024-06-03 15:15:01 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FindCoordinator response ClientResponse(receivedTimeMs=1717438501983, latencyMs=33, disconnected=false, timedOut=false, requestHeader=RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=31, headerVersion=2), responseBody=FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[]))
2024-06-03 15:15:01 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Group coordinator lookup failed: The coordinator is not available.
2024-06-03 15:15:01 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Coordinator discovery failed, refreshing metadata
org.apache.kafka.common.errors.CoordinatorNotAvailableException: The coordinator is not available.
2024-06-03 15:15:01 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=producer-1, correlationId=9, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=5, name='person', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:01 WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Error while fetching metadata with correlation id 9 : {person=LEADER_NOT_AVAILABLE}
2024-06-03 15:15:01 DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Requesting metadata update for topic person due to error LEADER_NOT_AVAILABLE
2024-06-03 15:15:01 DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Updated cluster metadata updateVersion 8 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=32, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=32, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=0, name='person-async', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[MetadataResponsePartition(errorCode=0, partitionIndex=0, leaderId=1001, leaderEpoch=0, replicaNodes=[1001], isrNodes=[1001], offlineReplicas=[])], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:02 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updating last seen epoch for partition person-async-0 from 0 to epoch 0 from new metadata
2024-06-03 15:15:02 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updated cluster metadata updateVersion 17 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[PartitionMetadata(error=NONE, partition=person-async-0, leader=Optional[1001], leaderEpoch=Optional[0], replicas=1001, isr=1001, offlineReplicas=)], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:02 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FindCoordinator request to broker localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FIND_COORDINATOR request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=33, headerVersion=2) and timeout 30000 to node 1001: FindCoordinatorRequestData(key='reactive-api', keyType=0, coordinatorKeys=[])
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=producer-1, correlationId=10, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FIND_COORDINATOR response from node 1001 for request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=33, headerVersion=2): FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[])
2024-06-03 15:15:02 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FindCoordinator response ClientResponse(receivedTimeMs=1717438502106, latencyMs=50, disconnected=false, timedOut=false, requestHeader=RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=33, headerVersion=2), responseBody=FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[]))
2024-06-03 15:15:02 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Group coordinator lookup failed: The coordinator is not available.
2024-06-03 15:15:02 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Coordinator discovery failed, refreshing metadata
org.apache.kafka.common.errors.CoordinatorNotAvailableException: The coordinator is not available.
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=producer-1, correlationId=10, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=5, name='person', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:02 WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Error while fetching metadata with correlation id 10 : {person=LEADER_NOT_AVAILABLE}
2024-06-03 15:15:02 DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Requesting metadata update for topic person due to error LEADER_NOT_AVAILABLE
2024-06-03 15:15:02 DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Updated cluster metadata updateVersion 9 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=34, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=34, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=0, name='person-async', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[MetadataResponsePartition(errorCode=0, partitionIndex=0, leaderId=1001, leaderEpoch=0, replicaNodes=[1001], isrNodes=[1001], offlineReplicas=[])], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:02 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updating last seen epoch for partition person-async-0 from 0 to epoch 0 from new metadata
2024-06-03 15:15:02 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updated cluster metadata updateVersion 18 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[PartitionMetadata(error=NONE, partition=person-async-0, leader=Optional[1001], leaderEpoch=Optional[0], replicas=1001, isr=1001, offlineReplicas=)], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:02 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FindCoordinator request to broker localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FIND_COORDINATOR request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=35, headerVersion=2) and timeout 30000 to node 1001: FindCoordinatorRequestData(key='reactive-api', keyType=0, coordinatorKeys=[])
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FIND_COORDINATOR response from node 1001 for request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=35, headerVersion=2): FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[])
2024-06-03 15:15:02 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FindCoordinator response ClientResponse(receivedTimeMs=1717438502187, latencyMs=25, disconnected=false, timedOut=false, requestHeader=RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=35, headerVersion=2), responseBody=FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[]))
2024-06-03 15:15:02 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Group coordinator lookup failed: The coordinator is not available.
2024-06-03 15:15:02 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Coordinator discovery failed, refreshing metadata
org.apache.kafka.common.errors.CoordinatorNotAvailableException: The coordinator is not available.
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=producer-1, correlationId=11, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=producer-1, correlationId=11, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=5, name='person', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:02 WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Error while fetching metadata with correlation id 11 : {person=LEADER_NOT_AVAILABLE}
2024-06-03 15:15:02 DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Requesting metadata update for topic person due to error LEADER_NOT_AVAILABLE
2024-06-03 15:15:02 DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Updated cluster metadata updateVersion 10 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=36, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=36, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=0, name='person-async', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[MetadataResponsePartition(errorCode=0, partitionIndex=0, leaderId=1001, leaderEpoch=0, replicaNodes=[1001], isrNodes=[1001], offlineReplicas=[])], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:02 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updating last seen epoch for partition person-async-0 from 0 to epoch 0 from new metadata
2024-06-03 15:15:02 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updated cluster metadata updateVersion 19 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[PartitionMetadata(error=NONE, partition=person-async-0, leader=Optional[1001], leaderEpoch=Optional[0], replicas=1001, isr=1001, offlineReplicas=)], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:02 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FindCoordinator request to broker localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FIND_COORDINATOR request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=37, headerVersion=2) and timeout 30000 to node 1001: FindCoordinatorRequestData(key='reactive-api', keyType=0, coordinatorKeys=[])
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FIND_COORDINATOR response from node 1001 for request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=37, headerVersion=2): FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[])
2024-06-03 15:15:02 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FindCoordinator response ClientResponse(receivedTimeMs=1717438502300, latencyMs=27, disconnected=false, timedOut=false, requestHeader=RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=37, headerVersion=2), responseBody=FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[]))
2024-06-03 15:15:02 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Group coordinator lookup failed: The coordinator is not available.
2024-06-03 15:15:02 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Coordinator discovery failed, refreshing metadata
org.apache.kafka.common.errors.CoordinatorNotAvailableException: The coordinator is not available.
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=producer-1, correlationId=12, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=38, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=38, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=0, name='person-async', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[MetadataResponsePartition(errorCode=0, partitionIndex=0, leaderId=1001, leaderEpoch=0, replicaNodes=[1001], isrNodes=[1001], offlineReplicas=[])], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:02 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updating last seen epoch for partition person-async-0 from 0 to epoch 0 from new metadata
2024-06-03 15:15:02 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updated cluster metadata updateVersion 20 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[PartitionMetadata(error=NONE, partition=person-async-0, leader=Optional[1001], leaderEpoch=Optional[0], replicas=1001, isr=1001, offlineReplicas=)], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:02 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FindCoordinator request to broker localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FIND_COORDINATOR request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=39, headerVersion=2) and timeout 30000 to node 1001: FindCoordinatorRequestData(key='reactive-api', keyType=0, coordinatorKeys=[])
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=producer-1, correlationId=12, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=5, name='person', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:02 WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Error while fetching metadata with correlation id 12 : {person=LEADER_NOT_AVAILABLE}
2024-06-03 15:15:02 DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Requesting metadata update for topic person due to error LEADER_NOT_AVAILABLE
2024-06-03 15:15:02 DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Updated cluster metadata updateVersion 11 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FIND_COORDINATOR response from node 1001 for request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=39, headerVersion=2): FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[])
2024-06-03 15:15:02 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FindCoordinator response ClientResponse(receivedTimeMs=1717438502395, latencyMs=14, disconnected=false, timedOut=false, requestHeader=RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=39, headerVersion=2), responseBody=FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[]))
2024-06-03 15:15:02 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Group coordinator lookup failed: The coordinator is not available.
2024-06-03 15:15:02 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Coordinator discovery failed, refreshing metadata
org.apache.kafka.common.errors.CoordinatorNotAvailableException: The coordinator is not available.
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=40, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=40, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=0, name='person-async', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[MetadataResponsePartition(errorCode=0, partitionIndex=0, leaderId=1001, leaderEpoch=0, replicaNodes=[1001], isrNodes=[1001], offlineReplicas=[])], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:02 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updating last seen epoch for partition person-async-0 from 0 to epoch 0 from new metadata
2024-06-03 15:15:02 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updated cluster metadata updateVersion 21 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[PartitionMetadata(error=NONE, partition=person-async-0, leader=Optional[1001], leaderEpoch=Optional[0], replicas=1001, isr=1001, offlineReplicas=)], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:02 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FindCoordinator request to broker localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FIND_COORDINATOR request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=41, headerVersion=2) and timeout 30000 to node 1001: FindCoordinatorRequestData(key='reactive-api', keyType=0, coordinatorKeys=[])
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=producer-1, correlationId=13, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FIND_COORDINATOR response from node 1001 for request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=41, headerVersion=2): FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[])
2024-06-03 15:15:02 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FindCoordinator response ClientResponse(receivedTimeMs=1717438502525, latencyMs=38, disconnected=false, timedOut=false, requestHeader=RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=41, headerVersion=2), responseBody=FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[]))
2024-06-03 15:15:02 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Group coordinator lookup failed: The coordinator is not available.
2024-06-03 15:15:02 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Coordinator discovery failed, refreshing metadata
org.apache.kafka.common.errors.CoordinatorNotAvailableException: The coordinator is not available.
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=producer-1, correlationId=13, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=5, name='person', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:02 WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Error while fetching metadata with correlation id 13 : {person=LEADER_NOT_AVAILABLE}
2024-06-03 15:15:02 DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Requesting metadata update for topic person due to error LEADER_NOT_AVAILABLE
2024-06-03 15:15:02 DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Updated cluster metadata updateVersion 12 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=42, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=42, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=0, name='person-async', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[MetadataResponsePartition(errorCode=0, partitionIndex=0, leaderId=1001, leaderEpoch=0, replicaNodes=[1001], isrNodes=[1001], offlineReplicas=[])], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:02 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updating last seen epoch for partition person-async-0 from 0 to epoch 0 from new metadata
2024-06-03 15:15:02 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updated cluster metadata updateVersion 22 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[PartitionMetadata(error=NONE, partition=person-async-0, leader=Optional[1001], leaderEpoch=Optional[0], replicas=1001, isr=1001, offlineReplicas=)], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:02 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FindCoordinator request to broker localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FIND_COORDINATOR request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=43, headerVersion=2) and timeout 30000 to node 1001: FindCoordinatorRequestData(key='reactive-api', keyType=0, coordinatorKeys=[])
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FIND_COORDINATOR response from node 1001 for request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=43, headerVersion=2): FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[])
2024-06-03 15:15:02 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FindCoordinator response ClientResponse(receivedTimeMs=1717438502615, latencyMs=17, disconnected=false, timedOut=false, requestHeader=RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=43, headerVersion=2), responseBody=FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[]))
2024-06-03 15:15:02 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Group coordinator lookup failed: The coordinator is not available.
2024-06-03 15:15:02 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Coordinator discovery failed, refreshing metadata
org.apache.kafka.common.errors.CoordinatorNotAvailableException: The coordinator is not available.
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=producer-1, correlationId=14, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=producer-1, correlationId=14, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=5, name='person', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:02 WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Error while fetching metadata with correlation id 14 : {person=LEADER_NOT_AVAILABLE}
2024-06-03 15:15:02 DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Requesting metadata update for topic person due to error LEADER_NOT_AVAILABLE
2024-06-03 15:15:02 DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Updated cluster metadata updateVersion 13 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=44, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=44, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=0, name='person-async', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[MetadataResponsePartition(errorCode=0, partitionIndex=0, leaderId=1001, leaderEpoch=0, replicaNodes=[1001], isrNodes=[1001], offlineReplicas=[])], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:02 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updating last seen epoch for partition person-async-0 from 0 to epoch 0 from new metadata
2024-06-03 15:15:02 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updated cluster metadata updateVersion 23 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[PartitionMetadata(error=NONE, partition=person-async-0, leader=Optional[1001], leaderEpoch=Optional[0], replicas=1001, isr=1001, offlineReplicas=)], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:02 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FindCoordinator request to broker localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FIND_COORDINATOR request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=45, headerVersion=2) and timeout 30000 to node 1001: FindCoordinatorRequestData(key='reactive-api', keyType=0, coordinatorKeys=[])
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=producer-1, correlationId=15, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FIND_COORDINATOR response from node 1001 for request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=45, headerVersion=2): FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[])
2024-06-03 15:15:02 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FindCoordinator response ClientResponse(receivedTimeMs=1717438502790, latencyMs=82, disconnected=false, timedOut=false, requestHeader=RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=45, headerVersion=2), responseBody=FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[]))
2024-06-03 15:15:02 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Group coordinator lookup failed: The coordinator is not available.
2024-06-03 15:15:02 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Coordinator discovery failed, refreshing metadata
org.apache.kafka.common.errors.CoordinatorNotAvailableException: The coordinator is not available.
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=producer-1, correlationId=15, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=5, name='person', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:02 WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Error while fetching metadata with correlation id 15 : {person=LEADER_NOT_AVAILABLE}
2024-06-03 15:15:02 DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Requesting metadata update for topic person due to error LEADER_NOT_AVAILABLE
2024-06-03 15:15:02 DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Updated cluster metadata updateVersion 14 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=46, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=46, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=0, name='person-async', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[MetadataResponsePartition(errorCode=0, partitionIndex=0, leaderId=1001, leaderEpoch=0, replicaNodes=[1001], isrNodes=[1001], offlineReplicas=[])], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:02 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updating last seen epoch for partition person-async-0 from 0 to epoch 0 from new metadata
2024-06-03 15:15:02 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updated cluster metadata updateVersion 24 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[PartitionMetadata(error=NONE, partition=person-async-0, leader=Optional[1001], leaderEpoch=Optional[0], replicas=1001, isr=1001, offlineReplicas=)], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:02 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FindCoordinator request to broker localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FIND_COORDINATOR request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=47, headerVersion=2) and timeout 30000 to node 1001: FindCoordinatorRequestData(key='reactive-api', keyType=0, coordinatorKeys=[])
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FIND_COORDINATOR response from node 1001 for request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=47, headerVersion=2): FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[])
2024-06-03 15:15:02 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FindCoordinator response ClientResponse(receivedTimeMs=1717438502825, latencyMs=13, disconnected=false, timedOut=false, requestHeader=RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=47, headerVersion=2), responseBody=FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[]))
2024-06-03 15:15:02 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Group coordinator lookup failed: The coordinator is not available.
2024-06-03 15:15:02 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Coordinator discovery failed, refreshing metadata
org.apache.kafka.common.errors.CoordinatorNotAvailableException: The coordinator is not available.
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=producer-1, correlationId=16, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=48, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=producer-1, correlationId=16, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=5, name='person', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:02 WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Error while fetching metadata with correlation id 16 : {person=LEADER_NOT_AVAILABLE}
2024-06-03 15:15:02 DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Requesting metadata update for topic person due to error LEADER_NOT_AVAILABLE
2024-06-03 15:15:02 DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Updated cluster metadata updateVersion 15 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=48, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=0, name='person-async', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[MetadataResponsePartition(errorCode=0, partitionIndex=0, leaderId=1001, leaderEpoch=0, replicaNodes=[1001], isrNodes=[1001], offlineReplicas=[])], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:02 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updating last seen epoch for partition person-async-0 from 0 to epoch 0 from new metadata
2024-06-03 15:15:02 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updated cluster metadata updateVersion 25 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[PartitionMetadata(error=NONE, partition=person-async-0, leader=Optional[1001], leaderEpoch=Optional[0], replicas=1001, isr=1001, offlineReplicas=)], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:02 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FindCoordinator request to broker localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FIND_COORDINATOR request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=49, headerVersion=2) and timeout 30000 to node 1001: FindCoordinatorRequestData(key='reactive-api', keyType=0, coordinatorKeys=[])
2024-06-03 15:15:02 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FIND_COORDINATOR response from node 1001 for request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=49, headerVersion=2): FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[])
2024-06-03 15:15:02 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FindCoordinator response ClientResponse(receivedTimeMs=1717438502966, latencyMs=50, disconnected=false, timedOut=false, requestHeader=RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=49, headerVersion=2), responseBody=FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[]))
2024-06-03 15:15:02 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Group coordinator lookup failed: The coordinator is not available.
2024-06-03 15:15:02 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Coordinator discovery failed, refreshing metadata
org.apache.kafka.common.errors.CoordinatorNotAvailableException: The coordinator is not available.
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=producer-1, correlationId=17, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=50, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:03 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FindCoordinator request to broker localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FIND_COORDINATOR request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=51, headerVersion=2) and timeout 30000 to node 1001: FindCoordinatorRequestData(key='reactive-api', keyType=0, coordinatorKeys=[])
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=50, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=0, name='person-async', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[MetadataResponsePartition(errorCode=0, partitionIndex=0, leaderId=1001, leaderEpoch=0, replicaNodes=[1001], isrNodes=[1001], offlineReplicas=[])], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:03 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updating last seen epoch for partition person-async-0 from 0 to epoch 0 from new metadata
2024-06-03 15:15:03 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updated cluster metadata updateVersion 26 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[PartitionMetadata(error=NONE, partition=person-async-0, leader=Optional[1001], leaderEpoch=Optional[0], replicas=1001, isr=1001, offlineReplicas=)], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=producer-1, correlationId=17, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=5, name='person', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:03 WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Error while fetching metadata with correlation id 17 : {person=LEADER_NOT_AVAILABLE}
2024-06-03 15:15:03 DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Requesting metadata update for topic person due to error LEADER_NOT_AVAILABLE
2024-06-03 15:15:03 DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Updated cluster metadata updateVersion 16 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FIND_COORDINATOR response from node 1001 for request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=51, headerVersion=2): FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[])
2024-06-03 15:15:03 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FindCoordinator response ClientResponse(receivedTimeMs=1717438503065, latencyMs=36, disconnected=false, timedOut=false, requestHeader=RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=51, headerVersion=2), responseBody=FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[]))
2024-06-03 15:15:03 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Group coordinator lookup failed: The coordinator is not available.
2024-06-03 15:15:03 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Coordinator discovery failed, refreshing metadata
org.apache.kafka.common.errors.CoordinatorNotAvailableException: The coordinator is not available.
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=52, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=producer-1, correlationId=18, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=52, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=0, name='person-async', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[MetadataResponsePartition(errorCode=0, partitionIndex=0, leaderId=1001, leaderEpoch=0, replicaNodes=[1001], isrNodes=[1001], offlineReplicas=[])], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:03 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updating last seen epoch for partition person-async-0 from 0 to epoch 0 from new metadata
2024-06-03 15:15:03 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updated cluster metadata updateVersion 27 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[PartitionMetadata(error=NONE, partition=person-async-0, leader=Optional[1001], leaderEpoch=Optional[0], replicas=1001, isr=1001, offlineReplicas=)], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:03 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FindCoordinator request to broker localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FIND_COORDINATOR request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=53, headerVersion=2) and timeout 30000 to node 1001: FindCoordinatorRequestData(key='reactive-api', keyType=0, coordinatorKeys=[])
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FIND_COORDINATOR response from node 1001 for request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=53, headerVersion=2): FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[])
2024-06-03 15:15:03 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FindCoordinator response ClientResponse(receivedTimeMs=1717438503242, latencyMs=84, disconnected=false, timedOut=false, requestHeader=RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=53, headerVersion=2), responseBody=FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[]))
2024-06-03 15:15:03 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Group coordinator lookup failed: The coordinator is not available.
2024-06-03 15:15:03 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Coordinator discovery failed, refreshing metadata
org.apache.kafka.common.errors.CoordinatorNotAvailableException: The coordinator is not available.
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=producer-1, correlationId=18, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=5, name='person', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:03 WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Error while fetching metadata with correlation id 18 : {person=LEADER_NOT_AVAILABLE}
2024-06-03 15:15:03 DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Requesting metadata update for topic person due to error LEADER_NOT_AVAILABLE
2024-06-03 15:15:03 DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Updated cluster metadata updateVersion 17 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=54, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=54, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=0, name='person-async', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[MetadataResponsePartition(errorCode=0, partitionIndex=0, leaderId=1001, leaderEpoch=0, replicaNodes=[1001], isrNodes=[1001], offlineReplicas=[])], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:03 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updating last seen epoch for partition person-async-0 from 0 to epoch 0 from new metadata
2024-06-03 15:15:03 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updated cluster metadata updateVersion 28 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[PartitionMetadata(error=NONE, partition=person-async-0, leader=Optional[1001], leaderEpoch=Optional[0], replicas=1001, isr=1001, offlineReplicas=)], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:03 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FindCoordinator request to broker localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FIND_COORDINATOR request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=55, headerVersion=2) and timeout 30000 to node 1001: FindCoordinatorRequestData(key='reactive-api', keyType=0, coordinatorKeys=[])
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FIND_COORDINATOR response from node 1001 for request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=55, headerVersion=2): FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[])
2024-06-03 15:15:03 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FindCoordinator response ClientResponse(receivedTimeMs=1717438503293, latencyMs=24, disconnected=false, timedOut=false, requestHeader=RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=55, headerVersion=2), responseBody=FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[]))
2024-06-03 15:15:03 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Group coordinator lookup failed: The coordinator is not available.
2024-06-03 15:15:03 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Coordinator discovery failed, refreshing metadata
org.apache.kafka.common.errors.CoordinatorNotAvailableException: The coordinator is not available.
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=producer-1, correlationId=19, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=56, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=56, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=0, name='person-async', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[MetadataResponsePartition(errorCode=0, partitionIndex=0, leaderId=1001, leaderEpoch=0, replicaNodes=[1001], isrNodes=[1001], offlineReplicas=[])], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:03 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updating last seen epoch for partition person-async-0 from 0 to epoch 0 from new metadata
2024-06-03 15:15:03 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updated cluster metadata updateVersion 29 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[PartitionMetadata(error=NONE, partition=person-async-0, leader=Optional[1001], leaderEpoch=Optional[0], replicas=1001, isr=1001, offlineReplicas=)], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:03 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FindCoordinator request to broker localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FIND_COORDINATOR request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=57, headerVersion=2) and timeout 30000 to node 1001: FindCoordinatorRequestData(key='reactive-api', keyType=0, coordinatorKeys=[])
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=producer-1, correlationId=19, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=5, name='person', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:03 WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Error while fetching metadata with correlation id 19 : {person=LEADER_NOT_AVAILABLE}
2024-06-03 15:15:03 DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Requesting metadata update for topic person due to error LEADER_NOT_AVAILABLE
2024-06-03 15:15:03 DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Updated cluster metadata updateVersion 18 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FIND_COORDINATOR response from node 1001 for request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=57, headerVersion=2): FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[])
2024-06-03 15:15:03 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FindCoordinator response ClientResponse(receivedTimeMs=1717438503443, latencyMs=61, disconnected=false, timedOut=false, requestHeader=RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=57, headerVersion=2), responseBody=FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[]))
2024-06-03 15:15:03 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Group coordinator lookup failed: The coordinator is not available.
2024-06-03 15:15:03 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Coordinator discovery failed, refreshing metadata
org.apache.kafka.common.errors.CoordinatorNotAvailableException: The coordinator is not available.
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=58, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=58, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=0, name='person-async', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[MetadataResponsePartition(errorCode=0, partitionIndex=0, leaderId=1001, leaderEpoch=0, replicaNodes=[1001], isrNodes=[1001], offlineReplicas=[])], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:03 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updating last seen epoch for partition person-async-0 from 0 to epoch 0 from new metadata
2024-06-03 15:15:03 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updated cluster metadata updateVersion 30 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[PartitionMetadata(error=NONE, partition=person-async-0, leader=Optional[1001], leaderEpoch=Optional[0], replicas=1001, isr=1001, offlineReplicas=)], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:03 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FindCoordinator request to broker localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FIND_COORDINATOR request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=59, headerVersion=2) and timeout 30000 to node 1001: FindCoordinatorRequestData(key='reactive-api', keyType=0, coordinatorKeys=[])
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=producer-1, correlationId=20, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FIND_COORDINATOR response from node 1001 for request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=59, headerVersion=2): FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[])
2024-06-03 15:15:03 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FindCoordinator response ClientResponse(receivedTimeMs=1717438503529, latencyMs=28, disconnected=false, timedOut=false, requestHeader=RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=59, headerVersion=2), responseBody=FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[]))
2024-06-03 15:15:03 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Group coordinator lookup failed: The coordinator is not available.
2024-06-03 15:15:03 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Coordinator discovery failed, refreshing metadata
org.apache.kafka.common.errors.CoordinatorNotAvailableException: The coordinator is not available.
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=producer-1, correlationId=20, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=5, name='person', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:03 WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Error while fetching metadata with correlation id 20 : {person=LEADER_NOT_AVAILABLE}
2024-06-03 15:15:03 DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Requesting metadata update for topic person due to error LEADER_NOT_AVAILABLE
2024-06-03 15:15:03 DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Updated cluster metadata updateVersion 19 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=60, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=producer-1, correlationId=21, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=60, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=0, name='person-async', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[MetadataResponsePartition(errorCode=0, partitionIndex=0, leaderId=1001, leaderEpoch=0, replicaNodes=[1001], isrNodes=[1001], offlineReplicas=[])], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:03 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updating last seen epoch for partition person-async-0 from 0 to epoch 0 from new metadata
2024-06-03 15:15:03 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updated cluster metadata updateVersion 31 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[PartitionMetadata(error=NONE, partition=person-async-0, leader=Optional[1001], leaderEpoch=Optional[0], replicas=1001, isr=1001, offlineReplicas=)], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:03 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FindCoordinator request to broker localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FIND_COORDINATOR request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=61, headerVersion=2) and timeout 30000 to node 1001: FindCoordinatorRequestData(key='reactive-api', keyType=0, coordinatorKeys=[])
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FIND_COORDINATOR response from node 1001 for request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=61, headerVersion=2): FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[])
2024-06-03 15:15:03 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FindCoordinator response ClientResponse(receivedTimeMs=1717438503837, latencyMs=60, disconnected=false, timedOut=false, requestHeader=RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=61, headerVersion=2), responseBody=FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1, coordinators=[]))
2024-06-03 15:15:03 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Group coordinator lookup failed: The coordinator is not available.
2024-06-03 15:15:03 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Coordinator discovery failed, refreshing metadata
org.apache.kafka.common.errors.CoordinatorNotAvailableException: The coordinator is not available.
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=62, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person-async')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=consumer-reactive-api-1, correlationId=62, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=0, name='person-async', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[MetadataResponsePartition(errorCode=0, partitionIndex=0, leaderId=1001, leaderEpoch=0, replicaNodes=[1001], isrNodes=[1001], offlineReplicas=[])], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:03 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updating last seen epoch for partition person-async-0 from 0 to epoch 0 from new metadata
2024-06-03 15:15:03 DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Updated cluster metadata updateVersion 32 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[PartitionMetadata(error=NONE, partition=person-async-0, leader=Optional[1001], leaderEpoch=Optional[0], replicas=1001, isr=1001, offlineReplicas=)], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:03 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FindCoordinator request to broker localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending FIND_COORDINATOR request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=63, headerVersion=2) and timeout 30000 to node 1001: FindCoordinatorRequestData(key='reactive-api', keyType=0, coordinatorKeys=[])
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=producer-1, correlationId=21, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=5, name='person', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:03 WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Error while fetching metadata with correlation id 21 : {person=LEADER_NOT_AVAILABLE}
2024-06-03 15:15:03 DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Requesting metadata update for topic person due to error LEADER_NOT_AVAILABLE
2024-06-03 15:15:03 DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Updated cluster metadata updateVersion 20 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FIND_COORDINATOR response from node 1001 for request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=63, headerVersion=2): FindCoordinatorResponseData(throttleTimeMs=0, errorCode=0, errorMessage='NONE', nodeId=1001, host='localhost', port=9092, coordinators=[])
2024-06-03 15:15:03 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received FindCoordinator response ClientResponse(receivedTimeMs=1717438503938, latencyMs=28, disconnected=false, timedOut=false, requestHeader=RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=63, headerVersion=2), responseBody=FindCoordinatorResponseData(throttleTimeMs=0, errorCode=0, errorMessage='NONE', nodeId=1001, host='localhost', port=9092, coordinators=[]))
2024-06-03 15:15:03 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Discovered group coordinator localhost:9092 (id: 2147482646 rack: null)
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.ClientUtils - Resolved host localhost as 127.0.0.1
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Initiating connection to node localhost:9092 (id: 2147482646 rack: null) using address localhost/127.0.0.1
2024-06-03 15:15:03 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Executing onJoinPrepare with generation -1 and memberId 
2024-06-03 15:15:03 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Heartbeat thread started
2024-06-03 15:15:03 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] (Re-)joining group
2024-06-03 15:15:03 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Joining group with current subscription: [person-async]
2024-06-03 15:15:03 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending JoinGroup (JoinGroupRequestData(groupId='reactive-api', sessionTimeoutMs=45000, rebalanceTimeoutMs=300000, memberId='', groupInstanceId=null, protocolType='consumer', protocols=[JoinGroupRequestProtocol(name='range', metadata=[0, 3, 0, 0, 0, 1, 0, 12, 112, 101, 114, 115, 111, 110, 45, 97, 115, 121, 110, 99, -1, -1, -1, -1, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1]), JoinGroupRequestProtocol(name='cooperative-sticky', metadata=[0, 3, 0, 0, 0, 1, 0, 12, 112, 101, 114, 115, 111, 110, 45, 97, 115, 121, 110, 99, 0, 0, 0, 4, -1, -1, -1, -1, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1])], reason='')) to coordinator localhost:9092 (id: 2147482646 rack: null)
2024-06-03 15:15:03 DEBUG o.a.kafka.common.network.Selector - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Created socket with SO_RCVBUF = 342972, SO_SNDBUF = 146988, SO_TIMEOUT = 0 to node 2147482646
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Completed connection to node 2147482646. Fetching API versions.
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Initiating API versions fetch from node 2147482646.
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending API_VERSIONS request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=65, headerVersion=2) and timeout 30000 to node 2147482646: ApiVersionsRequestData(clientSoftwareName='apache-kafka-java', clientSoftwareVersion='3.6.1')
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received API_VERSIONS response from node 2147482646 for request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=consumer-reactive-api-1, correlationId=65, headerVersion=2): ApiVersionsResponseData(errorCode=0, apiKeys=[ApiVersion(apiKey=0, minVersion=0, maxVersion=8), ApiVersion(apiKey=1, minVersion=0, maxVersion=12), ApiVersion(apiKey=2, minVersion=0, maxVersion=5), ApiVersion(apiKey=3, minVersion=0, maxVersion=9), ApiVersion(apiKey=4, minVersion=0, maxVersion=4), ApiVersion(apiKey=5, minVersion=0, maxVersion=3), ApiVersion(apiKey=6, minVersion=0, maxVersion=6), ApiVersion(apiKey=7, minVersion=0, maxVersion=3), ApiVersion(apiKey=8, minVersion=0, maxVersion=8), ApiVersion(apiKey=9, minVersion=0, maxVersion=7), ApiVersion(apiKey=10, minVersion=0, maxVersion=3), ApiVersion(apiKey=11, minVersion=0, maxVersion=7), ApiVersion(apiKey=12, minVersion=0, maxVersion=4), ApiVersion(apiKey=13, minVersion=0, maxVersion=4), ApiVersion(apiKey=14, minVersion=0, maxVersion=5), ApiVersion(apiKey=15, minVersion=0, maxVersion=5), ApiVersion(apiKey=16, minVersion=0, maxVersion=4), ApiVersion(apiKey=17, minVersion=0, maxVersion=1), ApiVersion(apiKey=18, minVersion=0, maxVersion=3), ApiVersion(apiKey=19, minVersion=0, maxVersion=6), ApiVersion(apiKey=20, minVersion=0, maxVersion=5), ApiVersion(apiKey=21, minVersion=0, maxVersion=2), ApiVersion(apiKey=22, minVersion=0, maxVersion=4), ApiVersion(apiKey=23, minVersion=0, maxVersion=3), ApiVersion(apiKey=24, minVersion=0, maxVersion=2), ApiVersion(apiKey=25, minVersion=0, maxVersion=2), ApiVersion(apiKey=26, minVersion=0, maxVersion=2), ApiVersion(apiKey=27, minVersion=0, maxVersion=0), ApiVersion(apiKey=28, minVersion=0, maxVersion=3), ApiVersion(apiKey=29, minVersion=0, maxVersion=2), ApiVersion(apiKey=30, minVersion=0, maxVersion=2), ApiVersion(apiKey=31, minVersion=0, maxVersion=2), ApiVersion(apiKey=32, minVersion=0, maxVersion=3), ApiVersion(apiKey=33, minVersion=0, maxVersion=1), ApiVersion(apiKey=34, minVersion=0, maxVersion=1), ApiVersion(apiKey=35, minVersion=0, maxVersion=2), ApiVersion(apiKey=36, minVersion=0, maxVersion=2), ApiVersion(apiKey=37, minVersion=0, maxVersion=3), ApiVersion(apiKey=38, minVersion=0, maxVersion=2), ApiVersion(apiKey=39, minVersion=0, maxVersion=2), ApiVersion(apiKey=40, minVersion=0, maxVersion=2), ApiVersion(apiKey=41, minVersion=0, maxVersion=2), ApiVersion(apiKey=42, minVersion=0, maxVersion=2), ApiVersion(apiKey=43, minVersion=0, maxVersion=2), ApiVersion(apiKey=44, minVersion=0, maxVersion=1), ApiVersion(apiKey=45, minVersion=0, maxVersion=0), ApiVersion(apiKey=46, minVersion=0, maxVersion=0), ApiVersion(apiKey=47, minVersion=0, maxVersion=0), ApiVersion(apiKey=48, minVersion=0, maxVersion=0), ApiVersion(apiKey=49, minVersion=0, maxVersion=0), ApiVersion(apiKey=50, minVersion=0, maxVersion=0), ApiVersion(apiKey=51, minVersion=0, maxVersion=0), ApiVersion(apiKey=56, minVersion=0, maxVersion=0), ApiVersion(apiKey=57, minVersion=0, maxVersion=0)], throttleTimeMs=0, supportedFeatures=[], finalizedFeaturesEpoch=0, finalizedFeatures=[], zkMigrationReady=false)
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Node 2147482646 has finalized features epoch: 0, finalized features: [], supported features: [], ZK migration ready: false, API versions: (Produce(0): 0 to 8 [usable: 8], Fetch(1): 0 to 12 [usable: 12], ListOffsets(2): 0 to 5 [usable: 5], Metadata(3): 0 to 9 [usable: 9], LeaderAndIsr(4): 0 to 4 [usable: 4], StopReplica(5): 0 to 3 [usable: 3], UpdateMetadata(6): 0 to 6 [usable: 6], ControlledShutdown(7): 0 to 3 [usable: 3], OffsetCommit(8): 0 to 8 [usable: 8], OffsetFetch(9): 0 to 7 [usable: 7], FindCoordinator(10): 0 to 3 [usable: 3], JoinGroup(11): 0 to 7 [usable: 7], Heartbeat(12): 0 to 4 [usable: 4], LeaveGroup(13): 0 to 4 [usable: 4], SyncGroup(14): 0 to 5 [usable: 5], DescribeGroups(15): 0 to 5 [usable: 5], ListGroups(16): 0 to 4 [usable: 4], SaslHandshake(17): 0 to 1 [usable: 1], ApiVersions(18): 0 to 3 [usable: 3], CreateTopics(19): 0 to 6 [usable: 6], DeleteTopics(20): 0 to 5 [usable: 5], DeleteRecords(21): 0 to 2 [usable: 2], InitProducerId(22): 0 to 4 [usable: 4], OffsetForLeaderEpoch(23): 0 to 3 [usable: 3], AddPartitionsToTxn(24): 0 to 2 [usable: 2], AddOffsetsToTxn(25): 0 to 2 [usable: 2], EndTxn(26): 0 to 2 [usable: 2], WriteTxnMarkers(27): 0 [usable: 0], TxnOffsetCommit(28): 0 to 3 [usable: 3], DescribeAcls(29): 0 to 2 [usable: 2], CreateAcls(30): 0 to 2 [usable: 2], DeleteAcls(31): 0 to 2 [usable: 2], DescribeConfigs(32): 0 to 3 [usable: 3], AlterConfigs(33): 0 to 1 [usable: 1], AlterReplicaLogDirs(34): 0 to 1 [usable: 1], DescribeLogDirs(35): 0 to 2 [usable: 2], SaslAuthenticate(36): 0 to 2 [usable: 2], CreatePartitions(37): 0 to 3 [usable: 3], CreateDelegationToken(38): 0 to 2 [usable: 2], RenewDelegationToken(39): 0 to 2 [usable: 2], ExpireDelegationToken(40): 0 to 2 [usable: 2], DescribeDelegationToken(41): 0 to 2 [usable: 2], DeleteGroups(42): 0 to 2 [usable: 2], ElectLeaders(43): 0 to 2 [usable: 2], IncrementalAlterConfigs(44): 0 to 1 [usable: 1], AlterPartitionReassignments(45): 0 [usable: 0], ListPartitionReassignments(46): 0 [usable: 0], OffsetDelete(47): 0 [usable: 0], DescribeClientQuotas(48): 0 [usable: 0], AlterClientQuotas(49): 0 [usable: 0], DescribeUserScramCredentials(50): 0 [usable: 0], AlterUserScramCredentials(51): 0 [usable: 0], DescribeQuorum(55): UNSUPPORTED, AlterPartition(56): 0 [usable: 0], UpdateFeatures(57): 0 [usable: 0], Envelope(58): UNSUPPORTED, DescribeCluster(60): UNSUPPORTED, DescribeProducers(61): UNSUPPORTED, UnregisterBroker(64): UNSUPPORTED, DescribeTransactions(65): UNSUPPORTED, ListTransactions(66): UNSUPPORTED, AllocateProducerIds(67): UNSUPPORTED, ConsumerGroupHeartbeat(68): UNSUPPORTED).
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending JOIN_GROUP request with header RequestHeader(apiKey=JOIN_GROUP, apiVersion=7, clientId=consumer-reactive-api-1, correlationId=64, headerVersion=2) and timeout 305000 to node 2147482646: JoinGroupRequestData(groupId='reactive-api', sessionTimeoutMs=45000, rebalanceTimeoutMs=300000, memberId='', groupInstanceId=null, protocolType='consumer', protocols=[JoinGroupRequestProtocol(name='range', metadata=[0, 3, 0, 0, 0, 1, 0, 12, 112, 101, 114, 115, 111, 110, 45, 97, 115, 121, 110, 99, -1, -1, -1, -1, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1]), JoinGroupRequestProtocol(name='cooperative-sticky', metadata=[0, 3, 0, 0, 0, 1, 0, 12, 112, 101, 114, 115, 111, 110, 45, 97, 115, 121, 110, 99, 0, 0, 0, 4, -1, -1, -1, -1, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1])], reason='')
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received JOIN_GROUP response from node 2147482646 for request with header RequestHeader(apiKey=JOIN_GROUP, apiVersion=7, clientId=consumer-reactive-api-1, correlationId=64, headerVersion=2): JoinGroupResponseData(throttleTimeMs=0, errorCode=79, generationId=-1, protocolType=null, protocolName=null, leader='', skipAssignment=false, memberId='consumer-reactive-api-1-0717585c-c4e4-4474-9f7e-cc5f1ae08138', members=[])
2024-06-03 15:15:03 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] JoinGroup failed due to non-fatal error: MEMBER_ID_REQUIRED. Will set the member id as consumer-reactive-api-1-0717585c-c4e4-4474-9f7e-cc5f1ae08138 and then rejoin. Sent generation was Generation{generationId=-1, memberId='', protocol='null'}
2024-06-03 15:15:03 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Request joining group due to: need to re-join with the given member-id: consumer-reactive-api-1-0717585c-c4e4-4474-9f7e-cc5f1ae08138
2024-06-03 15:15:03 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-06-03 15:15:03 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] (Re-)joining group
2024-06-03 15:15:03 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Joining group with current subscription: [person-async]
2024-06-03 15:15:03 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending JoinGroup (JoinGroupRequestData(groupId='reactive-api', sessionTimeoutMs=45000, rebalanceTimeoutMs=300000, memberId='consumer-reactive-api-1-0717585c-c4e4-4474-9f7e-cc5f1ae08138', groupInstanceId=null, protocolType='consumer', protocols=[JoinGroupRequestProtocol(name='range', metadata=[0, 3, 0, 0, 0, 1, 0, 12, 112, 101, 114, 115, 111, 110, 45, 97, 115, 121, 110, 99, -1, -1, -1, -1, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1]), JoinGroupRequestProtocol(name='cooperative-sticky', metadata=[0, 3, 0, 0, 0, 1, 0, 12, 112, 101, 114, 115, 111, 110, 45, 97, 115, 121, 110, 99, 0, 0, 0, 4, -1, -1, -1, -1, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1])], reason='rebalance failed due to MemberIdRequiredException')) to coordinator localhost:9092 (id: 2147482646 rack: null)
2024-06-03 15:15:03 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending JOIN_GROUP request with header RequestHeader(apiKey=JOIN_GROUP, apiVersion=7, clientId=consumer-reactive-api-1, correlationId=66, headerVersion=2) and timeout 305000 to node 2147482646: JoinGroupRequestData(groupId='reactive-api', sessionTimeoutMs=45000, rebalanceTimeoutMs=300000, memberId='consumer-reactive-api-1-0717585c-c4e4-4474-9f7e-cc5f1ae08138', groupInstanceId=null, protocolType='consumer', protocols=[JoinGroupRequestProtocol(name='range', metadata=[0, 3, 0, 0, 0, 1, 0, 12, 112, 101, 114, 115, 111, 110, 45, 97, 115, 121, 110, 99, -1, -1, -1, -1, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1]), JoinGroupRequestProtocol(name='cooperative-sticky', metadata=[0, 3, 0, 0, 0, 1, 0, 12, 112, 101, 114, 115, 111, 110, 45, 97, 115, 121, 110, 99, 0, 0, 0, 4, -1, -1, -1, -1, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1])], reason='rebalance failed due to MemberIdRequiredException')
2024-06-03 15:15:04 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node localhost:9092 (id: 1001 rack: null)
2024-06-03 15:15:04 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=producer-1, correlationId=22, headerVersion=2) and timeout 30000 to node 1001: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='person')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
2024-06-03 15:15:04 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Received METADATA response from node 1001 for request with header RequestHeader(apiKey=METADATA, apiVersion=9, clientId=producer-1, correlationId=22, headerVersion=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1001, host='localhost', port=9092, rack=null)], clusterId='Fum51fZvSd-Zb755_Ztrdw', controllerId=1001, topics=[MetadataResponseTopic(errorCode=0, name='person', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[MetadataResponsePartition(errorCode=0, partitionIndex=0, leaderId=1001, leaderEpoch=0, replicaNodes=[1001], isrNodes=[1001], offlineReplicas=[])], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
2024-06-03 15:15:04 DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Setting the last seen epoch of partition person-0 to 0 since the last known epoch was undefined.
2024-06-03 15:15:04 DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Updated cluster metadata updateVersion 21 to MetadataCache{clusterId='Fum51fZvSd-Zb755_Ztrdw', nodes={1001=localhost:9092 (id: 1001 rack: null)}, partitions=[PartitionMetadata(error=NONE, partition=person-0, leader=Optional[1001], leaderEpoch=Optional[0], replicas=1001, isr=1001, offlineReplicas=)], controller=localhost:9092 (id: 1001 rack: null)}
2024-06-03 15:15:04 DEBUG o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId of partition person-0 set to 0 with epoch 0. Reinitialize sequence at beginning.
2024-06-03 15:15:04 DEBUG o.a.k.c.p.i.RecordAccumulator - [Producer clientId=producer-1] Assigned producerId 0 and producerEpoch 0 to batch with base sequence 0 being sent to partition person-0
2024-06-03 15:15:04 DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending PRODUCE request with header RequestHeader(apiKey=PRODUCE, apiVersion=8, clientId=producer-1, correlationId=23, headerVersion=1) and timeout 30000 to node 1001: {acks=-1,timeout=30000,partitionSizes=[person-0=152]}
2024-06-03 15:15:04 DEBUG io.r2dbc.pool.ConnectionPool - Obtaining new connection from the pool
2024-06-03 15:15:04 DEBUG io.r2dbc.h2.client.SessionClient - Request:  SELECT CURRENT_TIMESTAMP
2024-06-03 15:15:04 DEBUG io.r2dbc.h2.client.SessionClient - Response: org.h2.result.LocalResult@23af72b columns: 1 rows: 1 pos: -1
2024-06-03 15:15:04 DEBUG io.r2dbc.h2.client.SessionClient - Request:  INSERT INTO PERSON (NAME, AGE) VALUES ($1, $2) {1: 'vini', 2: 32}
2024-06-03 15:15:04 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received JOIN_GROUP response from node 2147482646 for request with header RequestHeader(apiKey=JOIN_GROUP, apiVersion=7, clientId=consumer-reactive-api-1, correlationId=66, headerVersion=2): JoinGroupResponseData(throttleTimeMs=0, errorCode=0, generationId=1, protocolType='consumer', protocolName='range', leader='consumer-reactive-api-1-0717585c-c4e4-4474-9f7e-cc5f1ae08138', skipAssignment=false, memberId='consumer-reactive-api-1-0717585c-c4e4-4474-9f7e-cc5f1ae08138', members=[JoinGroupResponseMember(memberId='consumer-reactive-api-1-0717585c-c4e4-4474-9f7e-cc5f1ae08138', groupInstanceId=null, metadata=[0, 3, 0, 0, 0, 1, 0, 12, 112, 101, 114, 115, 111, 110, 45, 97, 115, 121, 110, 99, -1, -1, -1, -1, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1])])
2024-06-03 15:15:04 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Received successful JoinGroup response: JoinGroupResponseData(throttleTimeMs=0, errorCode=0, generationId=1, protocolType='consumer', protocolName='range', leader='consumer-reactive-api-1-0717585c-c4e4-4474-9f7e-cc5f1ae08138', skipAssignment=false, memberId='consumer-reactive-api-1-0717585c-c4e4-4474-9f7e-cc5f1ae08138', members=[JoinGroupResponseMember(memberId='consumer-reactive-api-1-0717585c-c4e4-4474-9f7e-cc5f1ae08138', groupInstanceId=null, metadata=[0, 3, 0, 0, 0, 1, 0, 12, 112, 101, 114, 115, 111, 110, 45, 97, 115, 121, 110, 99, -1, -1, -1, -1, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1])])
2024-06-03 15:15:04 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Enabling heartbeat thread
2024-06-03 15:15:04 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Successfully joined group with generation Generation{generationId=1, memberId='consumer-reactive-api-1-0717585c-c4e4-4474-9f7e-cc5f1ae08138', protocol='range'}
2024-06-03 15:15:04 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Performing assignment using strategy range with subscriptions {consumer-reactive-api-1-0717585c-c4e4-4474-9f7e-cc5f1ae08138=Subscription(topics=[person-async], ownedPartitions=[], groupInstanceId=null, generationId=-1, rackId=null)}
2024-06-03 15:15:04 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Finished assignment for group at generation 1: {consumer-reactive-api-1-0717585c-c4e4-4474-9f7e-cc5f1ae08138=Assignment(partitions=[person-async-0])}
2024-06-03 15:15:04 DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending leader SyncGroup to coordinator localhost:9092 (id: 2147482646 rack: null): SyncGroupRequestData(groupId='reactive-api', generationId=1, memberId='consumer-reactive-api-1-0717585c-c4e4-4474-9f7e-cc5f1ae08138', groupInstanceId=null, protocolType='consumer', protocolName='range', assignments=[SyncGroupRequestAssignment(memberId='consumer-reactive-api-1-0717585c-c4e4-4474-9f7e-cc5f1ae08138', assignment=[0, 3, 0, 0, 0, 1, 0, 12, 112, 101, 114, 115, 111, 110, 45, 97, 115, 121, 110, 99, 0, 0, 0, 1, 0, 0, 0, 0, -1, -1, -1, -1])])
2024-06-03 15:15:04 DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-reactive-api-1, groupId=reactive-api] Sending SYNC_GROUP request with header RequestHeader(apiKey=SYNC_GROUP, apiVersion=5, clientId=consumer-reactive-api-1, correlationId=67, headerVersion=2) and timeout 30000 to node 2147482646: SyncGroupRequestData(groupId='reactive-api', generationId=1, memberId='consumer-reactive-api-1-0717585c-c4e4-4474-9f7e-cc5f1ae08138', groupInstanceId=null, protocolType='consumer', protocolName='range', assignments=[SyncGroupRequestAssignment(memberId='consumer-reactive-api-1-0717585c-c4e4-4474-9f7e-cc5f1ae08138', assignment=[0, 3, 0, 0, 0, 1, 0, 12, 112, 101, 114, 115, 111, 110, 45, 97, 115, 121, 110, 99, 0, 0, 0, 1, 0, 0, 0, 0, -1, -1, -1, -1])])
2024-06-03 15:15:04 DEBUG io.r2dbc.pool.PooledConnection - Releasing connection
2024-06-03 15:15:04 DEBUG io.r2dbc.h2.client.SessionClient - Request:  SELECT CURRENT_TIMESTAMP
2024-06-03 15:15:04 DEBUG io.r2dbc.h2.client.SessionClient - Response: org.h2.result.LocalResult@7e876d72 columns: 1 rows: 1 pos: -1
2024-06-03 15:15:04 DEBUG org.apache.hc.client5.http.wire - http-outgoing-0 << "HTTP/1.1 200 [\r][\n]"
2024-06-03 15:15:04 DEBUG org.apache.hc.client5.http.wire - http-outgoing-0 << "Content-Type: application/json[\r][\n]"
2024-06-03 15:15:04 DEBUG org.apache.hc.client5.http.wire - http-outgoing-0 << "Transfer-Encoding: chunked[\r][\n]"
2024-06-03 15:15:04 DEBUG org.apache.hc.client5.http.wire - http-outgoing-0 << "Date: Mon, 03 Jun 2024 18:15:04 GMT[\r][\n]"
2024-06-03 15:15:04 DEBUG org.apache.hc.client5.http.wire - http-outgoing-0 << "Keep-Alive: timeout=60[\r][\n]"
2024-06-03 15:15:04 DEBUG org.apache.hc.client5.http.wire - http-outgoing-0 << "Connection: keep-alive[\r][\n]"
2024-06-03 15:15:04 DEBUG org.apache.hc.client5.http.wire - http-outgoing-0 << "[\r][\n]"
2024-06-03 15:15:04 DEBUG org.apache.hc.client5.http.wire - http-outgoing-0 << "1f[\r][\n]"
2024-06-03 15:15:04 DEBUG org.apache.hc.client5.http.wire - http-outgoing-0 << "{"id":1,"name":"vini","age":32}[\r][\n]"
2024-06-03 15:15:04 DEBUG org.apache.hc.client5.http.headers - http-outgoing-0 << HTTP/1.1 200 
2024-06-03 15:15:04 DEBUG org.apache.hc.client5.http.headers - http-outgoing-0 << Content-Type: application/json
2024-06-03 15:15:04 DEBUG org.apache.hc.client5.http.headers - http-outgoing-0 << Transfer-Encoding: chunked
2024-06-03 15:15:04 DEBUG org.apache.hc.client5.http.headers - http-outgoing-0 << Date: Mon, 03 Jun 2024 18:15:04 GMT
2024-06-03 15:15:04 DEBUG org.apache.hc.client5.http.headers - http-outgoing-0 << Keep-Alive: timeout=60
2024-06-03 15:15:04 DEBUG org.apache.hc.client5.http.headers - http-outgoing-0 << Connection: keep-alive
2024-06-03 15:15:04 DEBUG o.a.h.c.h.i.classic.MainClientExec - ex-0000000001 connection can be kept alive for 60 SECONDS
2024-06-03 15:15:04 DEBUG a.c.d.pact.provider.ProviderClient - Received response: 200
2024-06-03 15:15:04 DEBUG org.apache.hc.client5.http.wire - http-outgoing-0 << "0[\r][\n]"
2024-06-03 15:15:04 DEBUG org.apache.hc.client5.http.wire - http-outgoing-0 << "[\r][\n]"
2024-06-03 15:15:04 DEBUG o.a.h.c.h.i.c.InternalHttpClient - ep-0000000002 releasing valid endpoint
2024-06-03 15:15:04 DEBUG o.a.h.c.h.i.i.PoolingHttpClientConnectionManager - ep-0000000002 releasing endpoint
2024-06-03 15:15:04 DEBUG o.a.h.c.h.i.i.PoolingHttpClientConnectionManager - ep-0000000002 connection http-outgoing-0 can be kept alive for 60 SECONDS
2024-06-03 15:15:04 DEBUG o.a.h.c.h.i.i.PoolingHttpClientConnectionManager - ep-0000000002 connection released [route: {}->http://localhost:8080][total available: 1; route allocated: 1 of 5; total allocated: 1 of 25]
2024-06-03 15:15:04 DEBUG a.c.d.pact.provider.ProviderClient - Response: ProviderResponse(statusCode=200, headers={Content-Type=[application/json], Transfer-Encoding=[chunked], Date=[Mon, 03 Jun 2024 18:15:04 GMT], Keep-Alive=[timeout=60], Connection=[keep-alive]}, contentType=application/json, body=PRESENT({"id":1,"name":"vini","age":32}), metadata={Content-Type=NonBinaryData(data=["application/json"]), Transfer-Encoding=NonBinaryData(data=["chunked"]), Date=NonBinaryData(data=["Mon, 03 Jun 2024 18:15:04 GMT"]), Keep-Alive=NonBinaryData(data=["timeout=60"]), Connection=NonBinaryData(data=["keep-alive"])})
2024-06-03 15:15:04 DEBUG a.c.dius.pact.core.matchers.Matching - matchBody: context=MatchingContext(matchers=MatchingRuleCategory(name=body, matchingRules={}), allowUnexpectedKeys=true, pluginConfiguration={})
2024-06-03 15:15:04 DEBUG a.c.dius.pact.core.matchers.Matching - Found a matcher for application/json -> au.com.dius.pact.core.matchers.JsonContentMatcher@4d4ae76
2024-06-03 15:15:04 DEBUG a.c.d.p.c.m.JsonContentMatcher - compareValues: No matcher defined for path [$, age], using equality
2024-06-03 15:15:04 DEBUG a.c.d.p.c.m.JsonContentMatcher - compareValues: No matcher defined for path [$, id], using equality
2024-06-03 15:15:04 DEBUG a.c.d.p.c.m.JsonContentMatcher - compareValues: No matcher defined for path [$, name], using equality
    returns a response which
      has status code 200 (OK)
      has a matching body (OK)
2024-06-03 15:15:04 DEBUG a.c.d.p.p.DefaultTestResultAccumulator - Received test result 'Ok(interactionIds=[])' for Pact reactive_api-other_api and Retrieve create (File target/pacts/other_api-reactive_api.json)
2024-06-03 15:15:04 DEBUG a.c.d.p.p.DefaultTestResultAccumulator - Number of interactions #1 and results: [Ok(interactionIds=[])]
2024-06-03 15:15:04 DEBUG a.c.d.p.p.DefaultTestResultAccumulator - All interactions for Pact reactive_api-other_api have a verification result
2024-06-03 15:15:04 WARN  a.c.d.p.p.DefaultTestResultAccumulator - Skipping publishing of verification results as it has been disabled (pact.verifier.publishResults is not 'true')
2024-06-03 15:15:04 DEBUG a.c.d.p.p.j.PactVerificationStateChangeExtension - afterEach for interaction 'Retrieve create'
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
